# Personal Productivity Assistant - Cloud Functions Dependencies
# Python package requirements for email processing and AI functionality

# Google Cloud Platform Core Libraries
google-cloud-aiplatform==1.71.0     # Vertex AI platform for Gemini model access
google-cloud-firestore==2.20.0      # Firestore NoSQL database client
google-cloud-pubsub==2.26.0         # Pub/Sub messaging service client
google-cloud-storage==2.18.0        # Cloud Storage client for file operations
google-cloud-logging==3.11.0        # Cloud Logging for structured logging

# Google Workspace APIs
google-api-python-client==2.155.0   # Gmail API and other Google Workspace APIs
google-auth-httplib2==0.2.0          # HTTP library for Google API authentication
google-auth-oauthlib==1.2.1          # OAuth 2.0 authentication flow
google-auth==2.35.0                  # Google authentication library

# Cloud Functions Framework
functions-framework==3.8.1          # Functions Framework for local development and deployment

# Vertex AI and ML Libraries
vertexai==1.71.0                    # Vertex AI SDK for Gemini models
google-cloud-aiplatform[pipelines]==1.71.0  # AI Platform with pipeline support

# Data Processing and Utilities
requests==2.32.3                    # HTTP library for external API calls
urllib3==2.2.3                      # HTTP client (required by requests)
certifi==2024.8.30                  # Certificate bundle for HTTPS verification

# JSON and Data Handling
jsonschema==4.23.0                  # JSON schema validation
pydantic==2.9.2                     # Data validation and parsing

# Date and Time Utilities
python-dateutil==2.9.0              # Date parsing and manipulation
pytz==2024.2                        # Timezone handling

# Email Processing Utilities
email-validator==2.2.0              # Email address validation
html2text==2024.2.26               # Convert HTML emails to text

# Security and Cryptography
cryptography==43.0.1               # Cryptographic functions
pyopenssl==24.2.1                  # OpenSSL bindings

# Performance and Monitoring
psutil==6.0.0                      # System and process utilities
prometheus-client==0.21.0          # Metrics collection for monitoring

# Development and Testing Dependencies (optional, for local development)
pytest==8.3.3                      # Testing framework
pytest-asyncio==0.24.0             # Async testing support
black==24.8.0                      # Code formatting
flake8==7.1.1                      # Code linting
mypy==1.11.2                       # Static type checking

# Compatibility and Version Constraints
# Pin critical dependencies to avoid breaking changes
google-api-core[grpc]==2.21.0      # Core Google API functionality
grpcio==1.66.2                     # gRPC library
protobuf==4.25.5                   # Protocol Buffers

# Optional: Enhanced Functionality
# textblob==0.18.0                 # Natural language processing
# spacy==3.7.6                     # Advanced NLP (large dependency)
# beautifulsoup4==4.12.3           # HTML parsing for email content

# Environment-specific Requirements
# Uncomment based on your specific needs:

# For enhanced email parsing:
# email-reply-parser==0.5.12       # Parse email replies and signatures
# mailparser==1.2.0                # Advanced email parsing

# For enhanced security:
# python-jose[cryptography]==3.3.0 # JWT token handling
# passlib[bcrypt]==1.7.4           # Password hashing

# For database migrations (if using other databases):
# alembic==1.13.2                  # Database migration tool
# sqlalchemy==2.0.35               # SQL toolkit (if needed)

# For async processing:
# aiohttp==3.10.9                  # Async HTTP client
# asyncio-mqtt==0.16.2             # Async MQTT client

# Memory and Performance Optimization
# memory-profiler==0.61.0          # Memory usage profiling
# line-profiler==4.1.3             # Line-by-line profiling

# Production Monitoring
# opencensus-ext-google-cloud-monitoring==1.1.0  # Google Cloud monitoring integration
# opencensus-ext-stackdriver==0.8.0              # Stackdriver integration

# Note: Version pinning strategy
# - Major versions are pinned to avoid breaking changes
# - Minor version updates (~=) allow patch-level updates for security fixes
# - Critical dependencies are pinned to exact versions
# - Development dependencies can be more flexible

# Security Considerations:
# - All packages are from trusted sources (PyPI)
# - Regularly update to get security patches
# - Use dependency scanning tools in CI/CD
# - Monitor for known vulnerabilities

# Performance Notes:
# - google-cloud-* libraries are optimized for GCP
# - Functions Framework provides local development server
# - Keep total package size reasonable for cold start performance
# - Consider using Cloud Build for faster deployments

# Compatibility:
# - Python 3.12+ compatible
# - All dependencies support Cloud Functions Python 3.12 runtime
# - Compatible with Google Cloud services and APIs
# - Cross-platform compatibility (Linux, macOS, Windows for development)