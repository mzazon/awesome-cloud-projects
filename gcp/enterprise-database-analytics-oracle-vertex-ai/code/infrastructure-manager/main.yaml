# Google Cloud Infrastructure Manager configuration for Enterprise Database Analytics with Oracle and Vertex AI
# This configuration deploys a complete enterprise analytics platform combining Oracle Database@Google Cloud,
# Vertex AI, BigQuery, and Cloud Monitoring for intelligent data analysis and ML capabilities.

# Infrastructure Manager Import Map
# Defines the Google Cloud resource types and providers used in this deployment
imports:
  # Oracle Database@Google Cloud provider for managed Oracle infrastructure
  - path: "projects/${var.project_id}/locations/${var.region}/cloudExadataInfrastructures"
  - path: "projects/${var.project_id}/locations/${var.region}/autonomousDatabases"
  
  # Vertex AI provider for machine learning platform
  - path: "projects/${var.project_id}/locations/${var.region}/endpoints"
  - path: "projects/${var.project_id}/locations/${var.region}/datasets"
  - path: "projects/${var.project_id}/locations/${var.zone}/instances"
  
  # BigQuery provider for enterprise analytics
  - path: "projects/${var.project_id}/datasets"
  
  # Cloud Functions and Scheduler for data pipeline automation
  - path: "projects/${var.project_id}/locations/${var.region}/functions"
  - path: "projects/${var.project_id}/locations/${var.region}/jobs"
  
  # Cloud Storage for ML model artifacts and staging
  - path: "projects/${var.project_id}/buckets"
  
  # Cloud Monitoring for observability and alerting
  - path: "projects/${var.project_id}/alertPolicies"

# Variable definitions for customizable deployment parameters
variables:
  # Project and location configuration
  project_id:
    type: string
    description: "Google Cloud project ID for deployment"
    required: true
  
  region:
    type: string
    description: "Primary Google Cloud region for resource deployment"
    default: "us-central1"
    validation:
      # Oracle Database@Google Cloud has limited regional availability
      enum: ["us-east4", "us-west1", "europe-west2", "europe-west3"]
  
  zone:
    type: string
    description: "Google Cloud zone for compute resources"
    default: "us-central1-a"
  
  # Resource naming and identification
  deployment_name:
    type: string
    description: "Unique identifier for this deployment"
    default: "oracle-analytics"
  
  environment:
    type: string
    description: "Environment designation for resource labeling"
    default: "production"
    validation:
      enum: ["development", "staging", "production"]
  
  # Oracle Database configuration
  oracle_admin_password:
    type: string
    description: "Administrator password for Oracle Autonomous Database"
    sensitive: true
    validation:
      min_length: 12
      max_length: 30
      pattern: "^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[@$!%*?&])[A-Za-z\\d@$!%*?&]"
  
  # Vertex AI configuration
  vertex_ai_machine_type:
    type: string
    description: "Machine type for Vertex AI Workbench instance"
    default: "n1-standard-4"
  
  # BigQuery configuration
  bigquery_location:
    type: string
    description: "BigQuery dataset location"
    default: "US"

# Main resource definitions following Google Cloud best practices
resources:
  # Enable required Google Cloud APIs for the enterprise analytics platform
  # Oracle Database@Google Cloud requires specific API activation
  enable_apis:
    type: "serviceusage.googleapis.com/Service"
    properties:
      services:
        - name: "oracledatabase.googleapis.com"
          displayName: "Oracle Database@Google Cloud API"
        - name: "aiplatform.googleapis.com"
          displayName: "Vertex AI API"
        - name: "monitoring.googleapis.com"
          displayName: "Cloud Monitoring API"
        - name: "bigquery.googleapis.com"
          displayName: "BigQuery API"
        - name: "logging.googleapis.com"
          displayName: "Cloud Logging API"
        - name: "cloudfunctions.googleapis.com"
          displayName: "Cloud Functions API"
        - name: "cloudscheduler.googleapis.com"
          displayName: "Cloud Scheduler API"
        - name: "storage-api.googleapis.com"
          displayName: "Cloud Storage API"

  # Oracle Cloud Exadata Infrastructure
  # Provides enterprise-grade Oracle performance through OCI Exadata hardware
  # deployed within Google Cloud data centers for optimal integration
  oracle_exadata_infrastructure:
    type: "oracledatabase.googleapis.com/CloudExadataInfrastructure"
    properties:
      parent: "projects/${var.project_id}/locations/${var.region}"
      cloudExadataInfrastructureId: "${var.deployment_name}-exadata"
      cloudExadataInfrastructure:
        displayName: "Enterprise Analytics Oracle Infrastructure"
        properties:
          # Exadata X9M provides optimal performance for enterprise analytics workloads
          shape: "Exadata.X9M"
          storageCount: 3
          computeCount: 2
          # High availability configuration for enterprise requirements
          maintenanceWindow:
            preference: "NO_PREFERENCE"
            months: ["JANUARY", "APRIL", "JULY", "OCTOBER"]
            weeksOfMonth: [2, 3]
            daysOfWeek: ["SUNDAY"]
            hoursOfDay: [4, 5, 6]
        labels:
          purpose: "analytics"
          environment: "${var.environment}"
          cost-center: "enterprise-analytics"
          data-classification: "confidential"
    metadata:
      dependsOn: ["enable_apis"]

  # Oracle Autonomous Database Instance
  # Self-managing, self-securing, and self-repairing database capabilities
  # optimized for analytical workloads with built-in ML features
  oracle_autonomous_database:
    type: "oracledatabase.googleapis.com/AutonomousDatabase"
    properties:
      parent: "projects/${var.project_id}/locations/${var.region}"
      autonomousDatabaseId: "${var.deployment_name}-adb"
      autonomousDatabase:
        displayName: "Enterprise Analytics Database"
        # Enterprise Edition provides advanced analytics and ML capabilities
        databaseEdition: "ENTERPRISE_EDITION"
        adminPassword: "${var.oracle_admin_password}"
        # Compute and storage configuration optimized for analytics
        computeCount: 4
        storageSizeTbs: 1
        workloadType: "OLTP"
        # Security and backup configuration for enterprise compliance
        isAutoScalingEnabled: true
        isFreeTier: false
        # Network security configuration
        networkConfiguration:
          networkSecurityList:
            - displayName: "Oracle Analytics Security List"
              # Restrict access to specific IP ranges and protocols
              egressSecurityRules:
                - destination: "0.0.0.0/0"
                  protocol: "6"  # TCP
                  tcpOptions:
                    destinationPortRange:
                      min: 443
                      max: 443
              ingressSecurityRules:
                - source: "10.0.0.0/8"
                  protocol: "6"  # TCP
                  tcpOptions:
                    destinationPortRange:
                      min: 1521
                      max: 1522
        labels:
          purpose: "analytics"
          ml-ready: "true"
          environment: "${var.environment}"
          backup-policy: "enterprise"
    metadata:
      dependsOn: ["oracle_exadata_infrastructure"]

  # Cloud Storage bucket for Vertex AI staging and model artifacts
  # Provides secure, scalable storage for ML models and training data
  vertex_ai_staging_bucket:
    type: "storage.googleapis.com/Bucket"
    properties:
      name: "${var.project_id}-vertex-ai-staging-${var.deployment_name}"
      location: "${var.region}"
      # Storage class optimized for ML workloads with frequent access
      storageClass: "STANDARD"
      # Versioning enabled for model artifact management
      versioning:
        enabled: true
      # Lifecycle management for cost optimization
      lifecycle:
        rules:
          - action:
              type: "SetStorageClass"
              storageClass: "NEARLINE"
            condition:
              age: 30
          - action:
              type: "SetStorageClass"
              storageClass: "COLDLINE"
            condition:
              age: 90
          - action:
              type: "Delete"
            condition:
              age: 365
      # Security and access controls
      iamConfiguration:
        uniformBucketLevelAccess:
          enabled: true
        bucketPolicyOnly:
          enabled: true
      # Encryption configuration for data protection
      encryption:
        defaultKmsKeyName: "projects/${var.project_id}/locations/${var.region}/keyRings/vertex-ai-keyring/cryptoKeys/ml-models-key"
      labels:
        purpose: "vertex-ai-staging"
        environment: "${var.environment}"
        data-classification: "restricted"

  # Vertex AI Dataset for Oracle enterprise analytics
  # Managed dataset for training ML models on Oracle data
  vertex_ai_dataset:
    type: "aiplatform.googleapis.com/Dataset"
    properties:
      parent: "projects/${var.project_id}/locations/${var.region}"
      dataset:
        displayName: "Oracle Enterprise Analytics Dataset"
        description: "Dataset for training ML models on Oracle database analytics"
        # Tabular data schema for structured Oracle data
        metadataSchemaUri: "gs://google-cloud-aiplatform/schema/dataset/metadata/tabular_1.0.0.yaml"
        # Security and governance labels
        labels:
          source: "oracle-database"
          purpose: "enterprise-analytics"
          environment: "${var.environment}"
          data-sensitivity: "high"
    metadata:
      dependsOn: ["enable_apis"]

  # Vertex AI Workbench instance for ML development
  # Managed JupyterLab environment for data science and ML model development
  vertex_ai_workbench:
    type: "notebooks.googleapis.com/Instance"
    properties:
      parent: "projects/${var.project_id}/locations/${var.zone}"
      instanceId: "${var.deployment_name}-ml-workbench"
      instance:
        displayName: "Oracle Analytics ML Workbench"
        description: "Managed notebook environment for Oracle database analytics"
        # Machine configuration optimized for ML workloads
        machineType: "zones/${var.zone}/machineTypes/${var.vertex_ai_machine_type}"
        # Boot disk configuration with sufficient storage for ML frameworks
        bootDiskType: "PD_STANDARD"
        bootDiskSizeGb: 100
        # Pre-installed ML frameworks and libraries
        containerImage:
          repository: "gcr.io/deeplearning-platform-release/tf2-gpu"
          tag: "latest"
        # Network and security configuration
        network: "projects/${var.project_id}/global/networks/default"
        subnet: "projects/${var.project_id}/regions/${var.region}/subnetworks/default"
        noPublicIp: false
        noProxyAccess: false
        # Service account with necessary permissions for Oracle and Vertex AI access
        serviceAccount: "${google_service_account.vertex_ai_workbench_sa.email}"
        # Custom metadata for environment setup
        metadata:
          install-nvidia-driver: "True"
          proxy-mode: "service_account"
          enable-oslogin: "true"
        labels:
          purpose: "oracle-analytics"
          team: "ml-engineering"
          environment: "${var.environment}"
          cost-center: "data-science"

  # Vertex AI Endpoint for model deployment
  # Managed endpoint for serving ML models with automatic scaling
  vertex_ai_endpoint:
    type: "aiplatform.googleapis.com/Endpoint"
    properties:
      parent: "projects/${var.project_id}/locations/${var.region}"
      endpoint:
        displayName: "${var.deployment_name}-ml-endpoint"
        description: "Managed endpoint for Oracle analytics ML models"
        # Network configuration for secure model serving
        network: "projects/${var.project_id}/global/networks/default"
        # Security and monitoring configuration
        labels:
          purpose: "oracle-ml-serving"
          environment: "${var.environment}"
          model-type: "tabular-analytics"
    metadata:
      dependsOn: ["vertex_ai_dataset"]

  # BigQuery dataset for enterprise analytics
  # Serverless data warehouse for processed Oracle data and analytics
  bigquery_analytics_dataset:
    type: "bigquery.googleapis.com/Dataset"
    properties:
      projectId: "${var.project_id}"
      datasetId: "${var.deployment_name}_analytics"
      dataset:
        friendlyName: "Enterprise Oracle Database Analytics"
        description: "Analytics dataset for processed Oracle database data with ML insights"
        location: "${var.bigquery_location}"
        # Access controls and security configuration
        access:
          - role: "OWNER"
            userByEmail: "vertex-ai-service@${var.project_id}.iam.gserviceaccount.com"
          - role: "READER"
            groupByEmail: "analytics-team@${var.project_id}.iam.gserviceaccount.com"
        # Data retention and lifecycle policies
        defaultTableExpirationMs: 7776000000  # 90 days
        defaultPartitionExpirationMs: 2592000000  # 30 days
        # Labels for governance and cost management
        labels:
          source: "oracle"
          purpose: "analytics"
          environment: "${var.environment}"
          data-classification: "confidential"

  # BigQuery table for sales analytics
  # Structured table for Oracle sales data with ML prediction scores
  bigquery_sales_analytics_table:
    type: "bigquery.googleapis.com/Table"
    properties:
      projectId: "${var.project_id}"
      datasetId: "${bigquery_analytics_dataset.datasetId}"
      tableId: "sales_analytics"
      table:
        friendlyName: "Sales Analytics with ML Predictions"
        description: "Oracle sales data enriched with Vertex AI prediction scores"
        # Schema definition for analytics data
        schema:
          fields:
            - name: "sales_id"
              type: "STRING"
              mode: "REQUIRED"
              description: "Unique identifier for sales transaction"
            - name: "product_id"
              type: "STRING"
              mode: "REQUIRED"
              description: "Product identifier from Oracle database"
            - name: "revenue"
              type: "FLOAT"
              mode: "REQUIRED"
              description: "Transaction revenue amount"
            - name: "quarter"
              type: "STRING"
              mode: "REQUIRED"
              description: "Business quarter for temporal analysis"
            - name: "prediction_score"
              type: "FLOAT"
              mode: "NULLABLE"
              description: "ML prediction score from Vertex AI models"
            - name: "created_timestamp"
              type: "TIMESTAMP"
              mode: "REQUIRED"
              description: "Record creation timestamp"
        # Partitioning for performance optimization
        timePartitioning:
          type: "DAY"
          field: "created_timestamp"
          requirePartitionFilter: true
        # Clustering for query optimization
        clustering:
          fields: ["quarter", "product_id"]
    metadata:
      dependsOn: ["bigquery_analytics_dataset"]

  # Cloud Function for data pipeline orchestration
  # Serverless function to orchestrate data flow between Oracle, Vertex AI, and BigQuery
  oracle_analytics_pipeline_function:
    type: "cloudfunctions.googleapis.com/Function"
    properties:
      name: "projects/${var.project_id}/locations/${var.region}/functions/${var.deployment_name}-pipeline"
      function:
        description: "Orchestrates data pipeline between Oracle Database@Google Cloud, Vertex AI, and BigQuery"
        # Source code configuration
        sourceArchiveUrl: "gs://${vertex_ai_staging_bucket.name}/source/pipeline-function.zip"
        # Runtime and resource configuration
        runtime: "python311"
        entryPoint: "oracle_analytics_pipeline"
        # Memory and timeout optimized for data processing workloads
        availableMemoryMb: 512
        timeout: "300s"
        # Environment variables for service integration
        environmentVariables:
          PROJECT_ID: "${var.project_id}"
          REGION: "${var.region}"
          ORACLE_INSTANCE: "${oracle_autonomous_database.autonomousDatabaseId}"
          VERTEX_ENDPOINT: "${vertex_ai_endpoint.name}"
          BIGQUERY_DATASET: "${bigquery_analytics_dataset.datasetId}"
        # HTTP trigger for external invocation
        httpsTrigger:
          securityLevel: "SECURE_ALWAYS"
        # Service account with necessary permissions
        serviceAccountEmail: "${google_service_account.pipeline_function_sa.email}"
        # Network configuration for security
        network: "projects/${var.project_id}/global/networks/default"
        # Labels for resource management
        labels:
          purpose: "data-pipeline"
          environment: "${var.environment}"
          component: "orchestration"
    metadata:
      dependsOn: ["vertex_ai_staging_bucket", "oracle_autonomous_database", "vertex_ai_endpoint"]

  # Cloud Scheduler job for automated pipeline execution
  # Scheduled execution of the data pipeline for continuous analytics
  oracle_analytics_scheduler:
    type: "cloudscheduler.googleapis.com/Job"
    properties:
      name: "projects/${var.project_id}/locations/${var.region}/jobs/${var.deployment_name}-schedule"
      job:
        description: "Automated execution of Oracle analytics pipeline every 6 hours"
        # Cron schedule for every 6 hours starting at midnight EST
        schedule: "0 */6 * * *"
        timeZone: "America/New_York"
        # HTTP target configuration
        httpTarget:
          uri: "${oracle_analytics_pipeline_function.httpsTrigger.url}"
          httpMethod: "GET"
          # Authentication configuration
          oidcToken:
            serviceAccountEmail: "${google_service_account.scheduler_sa.email}"
        # Retry configuration for reliability
        retryConfig:
          retryCount: 3
          maxRetryDuration: "600s"
          minBackoffDuration: "60s"
          maxBackoffDuration: "300s"
    metadata:
      dependsOn: ["oracle_analytics_pipeline_function"]

  # Cloud Monitoring Alert Policy for Oracle Database performance
  # Proactive monitoring and alerting for Oracle Database@Google Cloud
  oracle_database_performance_alert:
    type: "monitoring.googleapis.com/AlertPolicy"
    properties:
      name: "projects/${var.project_id}/alertPolicies/${var.deployment_name}-oracle-performance"
      alertPolicy:
        displayName: "Oracle Database Performance Alert"
        documentation:
          content: "Alert triggered when Oracle Database CPU utilization exceeds 80% for 5 minutes"
          mimeType: "text/markdown"
        # Monitoring conditions for database performance
        conditions:
          - displayName: "Oracle CPU Utilization High"
            conditionThreshold:
              # Filter for Oracle Database@Google Cloud metrics
              filter: 'resource.type="oracle_database" AND metric.type="oracle.googleapis.com/database/cpu_utilization"'
              comparison: "COMPARISON_GREATER_THAN"
              thresholdValue: 80.0
              duration: "300s"
              # Aggregation for accurate threshold evaluation
              aggregations:
                - alignmentPeriod: "60s"
                  perSeriesAligner: "ALIGN_MEAN"
                  crossSeriesReducer: "REDUCE_MEAN"
                  groupByFields: ["resource.label.instance_id"]
        # Alert strategy configuration
        alertStrategy:
          autoClose: "1800s"  # Auto-close after 30 minutes
        # Enabled by default for production monitoring
        enabled: true

  # Cloud Monitoring Alert Policy for Vertex AI model performance
  # Monitoring ML model latency and performance metrics
  vertex_ai_model_performance_alert:
    type: "monitoring.googleapis.com/AlertPolicy"
    properties:
      name: "projects/${var.project_id}/alertPolicies/${var.deployment_name}-vertex-ai-performance"
      alertPolicy:
        displayName: "Vertex AI Model Performance Alert"
        documentation:
          content: "Alert triggered when Vertex AI model prediction latency exceeds 5 seconds"
          mimeType: "text/markdown"
        # Monitoring conditions for ML model performance
        conditions:
          - displayName: "Model Prediction Latency High"
            conditionThreshold:
              # Filter for Vertex AI prediction latency metrics
              filter: 'resource.type="ai_platform_model_version" AND metric.type="ml.googleapis.com/prediction/response_time"'
              comparison: "COMPARISON_GREATER_THAN"
              thresholdValue: 5000.0  # 5 seconds in milliseconds
              duration: "60s"
              # Aggregation for latency monitoring
              aggregations:
                - alignmentPeriod: "60s"
                  perSeriesAligner: "ALIGN_MEAN"
                  crossSeriesReducer: "REDUCE_MEAN"
                  groupByFields: ["resource.label.model_id"]
        # Alert strategy for rapid response
        alertStrategy:
          autoClose: "3600s"  # Auto-close after 1 hour
        # Enabled for continuous model monitoring
        enabled: true

# Service Account definitions for secure access and least privilege
# Each component uses dedicated service accounts with minimal required permissions
service_accounts:
  # Service account for Vertex AI Workbench with Oracle and ML access
  vertex_ai_workbench_sa:
    type: "iam.googleapis.com/ServiceAccount"
    properties:
      accountId: "${var.deployment_name}-workbench-sa"
      serviceAccount:
        displayName: "Vertex AI Workbench Service Account"
        description: "Service account for Oracle analytics ML workbench with necessary permissions"
      # IAM roles for Oracle Database and Vertex AI access
      bindings:
        - role: "roles/aiplatform.user"
          members: ["serviceAccount:${var.deployment_name}-workbench-sa@${var.project_id}.iam.gserviceaccount.com"]
        - role: "roles/bigquery.dataEditor"
          members: ["serviceAccount:${var.deployment_name}-workbench-sa@${var.project_id}.iam.gserviceaccount.com"]
        - role: "roles/storage.objectAdmin"
          members: ["serviceAccount:${var.deployment_name}-workbench-sa@${var.project_id}.iam.gserviceaccount.com"]

  # Service account for pipeline function with cross-service permissions
  pipeline_function_sa:
    type: "iam.googleapis.com/ServiceAccount"
    properties:
      accountId: "${var.deployment_name}-pipeline-sa"
      serviceAccount:
        displayName: "Oracle Analytics Pipeline Service Account"
        description: "Service account for data pipeline orchestration between Oracle, Vertex AI, and BigQuery"
      # IAM roles for comprehensive data pipeline access
      bindings:
        - role: "roles/oracledatabase.databaseUser"
          members: ["serviceAccount:${var.deployment_name}-pipeline-sa@${var.project_id}.iam.gserviceaccount.com"]
        - role: "roles/aiplatform.user"
          members: ["serviceAccount:${var.deployment_name}-pipeline-sa@${var.project_id}.iam.gserviceaccount.com"]
        - role: "roles/bigquery.dataEditor"
          members: ["serviceAccount:${var.deployment_name}-pipeline-sa@${var.project_id}.iam.gserviceaccount.com"]

  # Service account for Cloud Scheduler with function invocation permissions
  scheduler_sa:
    type: "iam.googleapis.com/ServiceAccount"
    properties:
      accountId: "${var.deployment_name}-scheduler-sa"
      serviceAccount:
        displayName: "Oracle Analytics Scheduler Service Account"
        description: "Service account for automated pipeline scheduling"
      # IAM roles for Cloud Function invocation
      bindings:
        - role: "roles/cloudfunctions.invoker"
          members: ["serviceAccount:${var.deployment_name}-scheduler-sa@${var.project_id}.iam.gserviceaccount.com"]

# Output values for external integration and verification
outputs:
  # Oracle Database@Google Cloud connection information
  oracle_exadata_infrastructure_id:
    description: "Oracle Exadata Infrastructure resource ID"
    value: "${oracle_exadata_infrastructure.cloudExadataInfrastructureId}"
  
  oracle_autonomous_database_id:
    description: "Oracle Autonomous Database resource ID"
    value: "${oracle_autonomous_database.autonomousDatabaseId}"
  
  oracle_database_connection_string:
    description: "Oracle Database connection string for applications"
    value: "${oracle_autonomous_database.connectionStrings.high}"
    sensitive: true
  
  # Vertex AI resource information
  vertex_ai_endpoint_id:
    description: "Vertex AI endpoint ID for model serving"
    value: "${vertex_ai_endpoint.name}"
  
  vertex_ai_dataset_id:
    description: "Vertex AI dataset ID for ML training"
    value: "${vertex_ai_dataset.name}"
  
  vertex_ai_workbench_url:
    description: "Vertex AI Workbench JupyterLab URL"
    value: "${vertex_ai_workbench.proxyUri}"
  
  # BigQuery resource information
  bigquery_dataset_id:
    description: "BigQuery dataset ID for analytics"
    value: "${bigquery_analytics_dataset.datasetId}"
  
  bigquery_sales_table_id:
    description: "BigQuery sales analytics table ID"
    value: "${bigquery_sales_analytics_table.tableId}"
  
  # Data pipeline information
  pipeline_function_url:
    description: "Cloud Function URL for manual pipeline execution"
    value: "${oracle_analytics_pipeline_function.httpsTrigger.url}"
  
  pipeline_scheduler_name:
    description: "Cloud Scheduler job name for automated execution"
    value: "${oracle_analytics_scheduler.name}"
  
  # Monitoring information
  oracle_performance_alert_policy:
    description: "Oracle Database performance alert policy name"
    value: "${oracle_database_performance_alert.name}"
  
  vertex_ai_performance_alert_policy:
    description: "Vertex AI model performance alert policy name"
    value: "${vertex_ai_model_performance_alert.name}"
  
  # Storage information
  vertex_ai_staging_bucket_name:
    description: "Cloud Storage bucket for Vertex AI staging"
    value: "${vertex_ai_staging_bucket.name}"

# Deployment metadata and annotations
metadata:
  annotations:
    # Infrastructure Manager deployment annotations
    "config.kubernetes.io/local-config": "true"
    "infrastructure-manager/deployment-type": "enterprise-analytics"
    "infrastructure-manager/oracle-database-integration": "true"
    "infrastructure-manager/vertex-ai-enabled": "true"
    "infrastructure-manager/monitoring-enabled": "true"
  
  labels:
    # Resource labeling for governance and cost management
    project: "oracle-analytics-platform"
    environment: "${var.environment}"
    managed-by: "infrastructure-manager"
    cost-center: "enterprise-analytics"
    data-classification: "confidential"
    compliance-scope: "enterprise"