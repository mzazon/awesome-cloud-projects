# =============================================================================
# Weather API Cloud Function - Python Dependencies
# =============================================================================
# This file specifies the Python packages required for the weather API
# Cloud Function to operate correctly in the Google Cloud Functions runtime.
# =============================================================================

# Core Functions Framework - Required for Cloud Functions
# The Functions Framework provides the HTTP server and request handling
functions-framework==3.*

# HTTP requests library for external API calls (if extending to real weather APIs)
# Used for making HTTP requests to external weather services
requests==2.*

# Flask web framework - Required by Functions Framework for HTTP handling
# Provides request/response objects and HTTP utilities
Flask==2.*

# Additional dependencies for enhanced functionality (optional)

# JSON handling and validation (built into Python, but can be enhanced)
# jsonschema==4.*  # Uncomment if you need request validation

# HTTP client with better connection pooling (alternative to requests)
# httpx==0.24.*  # Uncomment for async HTTP support

# Caching library for response caching
# cachetools==5.*  # Uncomment if implementing response caching

# Google Cloud client libraries (if extending to use other GCP services)
# google-cloud-logging==3.*     # For advanced logging
# google-cloud-monitoring==2.*  # For custom metrics
# google-cloud-secret-manager==2.*  # For secrets management
# google-cloud-firestore==2.*   # For data persistence
# google-cloud-storage==2.*     # For file storage

# Date and time handling (enhanced)
# python-dateutil==2.*  # Uncomment for advanced date/time operations

# Environment variable management
# python-dotenv==1.*  # Uncomment for .env file support in local development

# Input validation and sanitization
# bleach==6.*  # Uncomment for HTML/input sanitization
# validators==0.*  # Uncomment for data validation

# Performance and monitoring
# psutil==5.*  # Uncomment for system resource monitoring
# memory-profiler==0.*  # Uncomment for memory usage analysis

# =============================================================================
# DEVELOPMENT DEPENDENCIES (for local testing only)
# =============================================================================
# These dependencies are not needed in production but useful for development

# pytest==7.*          # Testing framework
# pytest-cov==4.*      # Coverage reporting
# black==23.*          # Code formatting
# flake8==6.*          # Code linting
# mypy==1.*            # Type checking

# =============================================================================
# PRODUCTION RECOMMENDATIONS
# =============================================================================
# For production deployments, consider these additional packages:

# Security enhancements
# cryptography==41.*   # For advanced cryptographic operations
# pyjwt==2.*           # For JWT token handling

# Performance optimizations  
# ujson==5.*           # Faster JSON parsing
# gunicorn==21.*       # Production WSGI server (if needed)

# Monitoring and observability
# opencensus-ext-stackdriver==0.*  # For Stackdriver integration
# prometheus-client==0.*           # For Prometheus metrics

# =============================================================================
# VERSION PINNING STRATEGY
# =============================================================================
# This requirements.txt uses flexible versioning (major.* format) to:
# 1. Allow automatic security updates within major versions
# 2. Prevent breaking changes from major version updates
# 3. Maintain compatibility with Cloud Functions runtime

# For production environments, consider pinning exact versions for reproducibility:
# functions-framework==3.4.0
# requests==2.31.0
# Flask==2.3.3

# =============================================================================
# RUNTIME COMPATIBILITY
# =============================================================================
# These dependencies are compatible with:
# - Python 3.8+ (Cloud Functions supported runtimes)
# - Google Cloud Functions Gen2
# - Cloud Run (if migrating)
# - Local development environments

# Minimum Python version: 3.8
# Recommended Python version: 3.11+ for better performance
# Cloud Functions runtime: python313 (as specified in Terraform)

# =============================================================================
# PACKAGE SIZE OPTIMIZATION
# =============================================================================
# Keep the number of dependencies minimal to:
# 1. Reduce cold start times
# 2. Minimize security surface area
# 3. Improve deployment speed
# 4. Reduce memory usage

# Current lightweight package set focuses on core functionality.
# Add additional packages only when specific features are needed.