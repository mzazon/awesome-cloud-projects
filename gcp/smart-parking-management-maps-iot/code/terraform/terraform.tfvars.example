# Smart Parking Management - Terraform Variables Example
# Copy this file to terraform.tfvars and customize the values for your deployment

# ================================================================================
# REQUIRED VARIABLES
# ================================================================================

# Your Google Cloud Project ID (REQUIRED)
# This should be a unique project ID where you want to deploy the infrastructure
project_id = "my-smart-parking-project-12345"

# ================================================================================
# BASIC CONFIGURATION
# ================================================================================

# Google Cloud region for resource deployment
# Choose a region close to your users for better performance
region = "us-central1"

# Google Cloud zone for zonal resources
zone = "us-central1-a"

# Environment designation (affects resource naming and configurations)
environment = "dev"

# Project name prefix for resource naming
project_name = "smart-parking"

# ================================================================================
# CLOUD FUNCTIONS CONFIGURATION
# ================================================================================

# Runtime version for Cloud Functions
function_runtime = "nodejs20"

# Memory allocation for Cloud Functions (128, 256, 512, 1024, 2048, 4096, 8192 MB)
function_memory = 256

# Function timeout in seconds (1-540)
function_timeout = 60

# Maximum number of function instances for auto-scaling
function_max_instances = 100

# Minimum number of function instances to keep warm (0 for cold start)
function_min_instances = 0

# ================================================================================
# PUB/SUB CONFIGURATION
# ================================================================================

# Name for the Pub/Sub topic (will be suffixed with random ID)
pubsub_topic_name = "parking-events"

# Name for the Pub/Sub subscription
pubsub_subscription_name = "parking-processing"

# Message retention duration (e.g., "604800s" for 7 days)
pubsub_message_retention_duration = "604800s"

# Acknowledgment deadline for message processing (10-600 seconds)
pubsub_ack_deadline = 60

# ================================================================================
# FIRESTORE CONFIGURATION
# ================================================================================

# Firestore database type (FIRESTORE_NATIVE or DATASTORE_MODE)
firestore_database_type = "FIRESTORE_NATIVE"

# Firestore location (should be compatible with your region)
firestore_location_id = "us-central"

# Collection names in Firestore
parking_spaces_collection = "parking_spaces"
parking_zones_collection = "parking_zones"

# ================================================================================
# GOOGLE MAPS PLATFORM CONFIGURATION
# ================================================================================

# Display name for the Maps Platform API key
maps_api_key_name = "Smart Parking Maps API"

# Whether to enable API restrictions for security
enable_maps_api_restrictions = true

# Allowed referrers for Maps API (use ["*"] for development, restrict for production)
maps_allowed_referrers = ["*"]

# ================================================================================
# SECURITY AND IAM CONFIGURATION
# ================================================================================

# Service account name for MQTT broker authentication
mqtt_service_account_name = "mqtt-pubsub-publisher"

# Whether to create a service account key (use false with workload identity in production)
create_service_account_key = true

# Whether to enable authentication for the parking management API
enable_api_authentication = false

# ================================================================================
# NETWORKING CONFIGURATION (OPTIONAL)
# ================================================================================

# Whether to enable private VPC networking (increases security but complexity)
enable_private_google_access = false

# Whether to enable VPC Flow Logs for network monitoring
enable_vpc_flow_logs = false

# ================================================================================
# MONITORING AND LOGGING CONFIGURATION
# ================================================================================

# Whether to enable Cloud Monitoring alerts
enable_monitoring = true

# Whether to enable Cloud Logging
enable_cloud_logging = true

# Log retention period in days (1-3653)
log_retention_days = 30

# ================================================================================
# COST OPTIMIZATION CONFIGURATION
# ================================================================================

# Whether to automatically enable required Google Cloud APIs
enable_apis_on_create = true

# Whether to delete default resources to reduce costs (be careful in shared projects)
delete_default_resources = false

# ================================================================================
# RESOURCE LABELING
# ================================================================================

# Labels for resource organization and cost tracking
labels = {
  project     = "smart-parking"
  environment = "development"
  team        = "infrastructure"
  component   = "iot-parking"
  cost-center = "engineering"
  owner       = "your-email@company.com"
}

# ================================================================================
# ADVANCED CONFIGURATION (OPTIONAL)
# ================================================================================

# Random suffix length for unique resource names (4-10 characters)
random_suffix_length = 6

# Backup retention policy in days
backup_retention_policy = 7

# Function names (will be suffixed with random ID)
parking_processor_function_name = "process-parking-data"
parking_api_function_name = "parking-management-api"

# ================================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# ================================================================================

# Development Environment Example:
# - Lower resource limits for cost savings
# - Relaxed security for easier testing
# - Shorter retention periods

# environment = "dev"
# function_memory = 256
# function_max_instances = 10
# enable_api_authentication = false
# log_retention_days = 7
# create_service_account_key = true

# Production Environment Example:
# - Higher resource limits for performance
# - Enhanced security configurations
# - Longer retention periods for compliance

# environment = "prod"
# function_memory = 512
# function_max_instances = 100
# enable_api_authentication = true
# enable_private_google_access = true
# log_retention_days = 90
# create_service_account_key = false
# enable_maps_api_restrictions = true
# maps_allowed_referrers = ["https://yourapp.com/*", "https://yourapp.example.com/*"]

# ================================================================================
# NOTES AND RECOMMENDATIONS
# ================================================================================

# 1. Always use a unique project_id to avoid conflicts
# 2. Choose a region close to your users for better performance
# 3. Enable authentication for production API deployments
# 4. Use workload identity instead of service account keys when possible
# 5. Restrict Maps API keys to specific domains in production
# 6. Monitor costs and adjust resource limits based on actual usage
# 7. Enable private networking for sensitive environments
# 8. Set appropriate log retention periods based on compliance requirements
# 9. Use meaningful labels for cost tracking and resource organization
# 10. Test thoroughly in development before deploying to production