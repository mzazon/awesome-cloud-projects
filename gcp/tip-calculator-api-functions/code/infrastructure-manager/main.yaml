# Google Cloud Infrastructure Manager Configuration
# Tip Calculator API with Cloud Functions
# Generated for recipe: tip-calculator-api-functions

# This configuration deploys a serverless tip calculator API using Google Cloud Functions
# The function provides HTTP endpoints for calculating tips and splitting bills among multiple people

apiVersion: 'compute.cnrm.cloud.google.com/v1beta1'
kind: Config
metadata:
  name: tip-calculator-config
  namespace: default
spec:
  resources:
    # Enable required Google Cloud APIs
    - name: enable-functions-api
      type: serviceusage.cnrm.cloud.google.com/Service
      properties:
        resourceID: cloudfunctions.googleapis.com
        projectRef:
          external: ${PROJECT_ID}
        disableDependentServices: false

    - name: enable-build-api
      type: serviceusage.cnrm.cloud.google.com/Service
      properties:
        resourceID: cloudbuild.googleapis.com
        projectRef:
          external: ${PROJECT_ID}
        disableDependentServices: false

    - name: enable-run-api
      type: serviceusage.cnrm.cloud.google.com/Service
      properties:
        resourceID: run.googleapis.com
        projectRef:
          external: ${PROJECT_ID}
        disableDependentServices: false

    - name: enable-artifactregistry-api
      type: serviceusage.cnrm.cloud.google.com/Service
      properties:
        resourceID: artifactregistry.googleapis.com
        projectRef:
          external: ${PROJECT_ID}
        disableDependentServices: false

    - name: enable-logging-api
      type: serviceusage.cnrm.cloud.google.com/Service
      properties:
        resourceID: logging.googleapis.com
        projectRef:
          external: ${PROJECT_ID}
        disableDependentServices: false

    # Create IAM Service Account for Cloud Function
    - name: tip-calculator-service-account
      type: iam.cnrm.cloud.google.com/v1beta1/ServiceAccount
      properties:
        resourceID: tip-calculator-sa
        displayName: "Tip Calculator Function Service Account"
        description: "Service account for the tip calculator Cloud Function"
        projectRef:
          external: ${PROJECT_ID}
      depends:
        - enable-functions-api

    # Grant necessary IAM roles to the service account
    - name: tip-calculator-function-invoker-binding
      type: iam.cnrm.cloud.google.com/v1beta1/IAMPolicyMember
      properties:
        member: serviceAccount:tip-calculator-sa@${PROJECT_ID}.iam.gserviceaccount.com
        role: roles/cloudfunctions.invoker
        resourceRef:
          apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
          kind: Project
          external: ${PROJECT_ID}
      depends:
        - tip-calculator-service-account

    - name: tip-calculator-logs-writer-binding
      type: iam.cnrm.cloud.google.com/v1beta1/IAMPolicyMember
      properties:
        member: serviceAccount:tip-calculator-sa@${PROJECT_ID}.iam.gserviceaccount.com
        role: roles/logging.logWriter
        resourceRef:
          apiVersion: resourcemanager.cnrm.cloud.google.com/v1beta1
          kind: Project
          external: ${PROJECT_ID}
      depends:
        - tip-calculator-service-account

    # Create Cloud Storage bucket for function source code
    - name: tip-calculator-source-bucket
      type: storage.cnrm.cloud.google.com/v1beta1/StorageBucket
      properties:
        resourceID: ${PROJECT_ID}-tip-calculator-source
        location: US
        storageClass: STANDARD
        uniformBucketLevelAccess: true
        versioning:
          enabled: true
        lifecycle:
          rule:
            - action:
                type: Delete
            condition:
              age: 30
        projectRef:
          external: ${PROJECT_ID}
      depends:
        - enable-functions-api

    # Upload function source code to Cloud Storage
    # Note: In a real deployment, you would upload the source code archive here
    # This is a placeholder that assumes the source code is available
    - name: tip-calculator-source-object
      type: storage.cnrm.cloud.google.com/v1beta1/StorageBucketObject
      properties:
        resourceID: tip-calculator-source.zip
        bucketRef:
          name: tip-calculator-source-bucket
        # Source code would be uploaded here - this is a placeholder
        # In practice, you would create a ZIP file with main.py and requirements.txt
        contentType: application/zip
        metadata:
          function-name: tip-calculator
          runtime: python312
      depends:
        - tip-calculator-source-bucket

    # Deploy the Cloud Function
    - name: tip-calculator-function
      type: cloudfunctions.cnrm.cloud.google.com/v1beta1/CloudFunction
      properties:
        resourceID: tip-calculator
        location: ${REGION}
        description: "Serverless tip calculator API for restaurant bills"
        runtime: python312
        entryPoint: calculate_tip
        timeout: 60s
        availableMemoryMb: 256
        maxInstances: 100
        
        # HTTP trigger configuration
        httpsTrigger: {}
        
        # Source code configuration
        sourceArchiveUrl: gs://${PROJECT_ID}-tip-calculator-source/tip-calculator-source.zip
        
        # Service account configuration
        serviceAccountEmail: tip-calculator-sa@${PROJECT_ID}.iam.gserviceaccount.com
        
        # Environment variables (if needed)
        environmentVariables:
          FUNCTION_NAME: tip-calculator
          REGION: ${REGION}
        
        # Labels for organization and billing
        labels:
          environment: demo
          type: calculator
          cost-center: engineering
          application: tip-calculator
        
        # Project reference
        projectRef:
          external: ${PROJECT_ID}
      
      depends:
        - tip-calculator-service-account
        - tip-calculator-source-object
        - enable-functions-api
        - enable-build-api
        - enable-run-api

    # Create IAM policy to allow unauthenticated invocations (for demo purposes)
    - name: tip-calculator-invoker-policy
      type: iam.cnrm.cloud.google.com/v1beta1/IAMPolicyMember
      properties:
        member: allUsers
        role: roles/cloudfunctions.invoker
        resourceRef:
          apiVersion: cloudfunctions.cnrm.cloud.google.com/v1beta1
          kind: CloudFunction
          name: tip-calculator-function
      depends:
        - tip-calculator-function

    # Create Cloud Logging sink for function logs (optional)
    - name: tip-calculator-log-sink
      type: logging.cnrm.cloud.google.com/v1beta1/LoggingSink
      properties:
        resourceID: tip-calculator-logs
        destination: storage.googleapis.com/${PROJECT_ID}-tip-calculator-logs
        filter: |
          resource.type="cloud_function"
          resource.labels.function_name="tip-calculator"
        description: "Log sink for tip calculator function"
        projectRef:
          external: ${PROJECT_ID}
      depends:
        - tip-calculator-function
        - enable-logging-api

    # Create monitoring alert policy for function errors (optional)
    - name: tip-calculator-error-alert
      type: monitoring.cnrm.cloud.google.com/v1beta1/MonitoringAlertPolicy
      properties:
        resourceID: tip-calculator-errors
        displayName: "Tip Calculator Function Errors"
        documentation:
          content: "Alert when the tip calculator function has a high error rate"
          mimeType: text/markdown
        
        # Condition for monitoring function errors
        conditions:
          - displayName: "Function Error Rate"
            conditionThreshold:
              filter: |
                resource.type="cloud_function"
                resource.label.function_name="tip-calculator"
                metric.type="cloudfunctions.googleapis.com/function/execution_count"
                metric.label.status!="ok"
              comparison: COMPARISON_GREATER_THAN
              thresholdValue: 5
              duration: 300s
              aggregations:
                - alignmentPeriod: 60s
                  perSeriesAligner: ALIGN_RATE
                  crossSeriesReducer: REDUCE_SUM
        
        # Notification channels would be configured separately
        enabled: true
        
        projectRef:
          external: ${PROJECT_ID}
      depends:
        - tip-calculator-function

# Configuration parameters that can be customized
parameters:
  PROJECT_ID:
    description: "Google Cloud Project ID where resources will be created"
    type: string
    required: true
  
  REGION:
    description: "Google Cloud region for function deployment"
    type: string
    default: "us-central1"
    required: false

# Outputs to provide important information after deployment
outputs:
  function_url:
    description: "HTTPS URL of the deployed tip calculator function"
    value: ${tip-calculator-function.httpsTrigger.url}
  
  function_name:
    description: "Name of the deployed Cloud Function"
    value: ${tip-calculator-function.name}
  
  service_account_email:
    description: "Email of the service account used by the function"
    value: ${tip-calculator-service-account.email}
  
  source_bucket:
    description: "Cloud Storage bucket containing function source code"
    value: ${tip-calculator-source-bucket.name}
  
  project_id:
    description: "Google Cloud Project ID"
    value: ${PROJECT_ID}
  
  region:
    description: "Deployment region"
    value: ${REGION}

# Deployment metadata
metadata:
  name: tip-calculator-infrastructure
  description: |
    Infrastructure Manager configuration for deploying a serverless tip calculator API
    using Google Cloud Functions. This configuration creates all necessary resources
    including the function, IAM roles, storage bucket, and monitoring components.
  
  labels:
    recipe: tip-calculator-api-functions
    provider: gcp
    category: serverless
    difficulty: "100"
    infrastructure-tool: infrastructure-manager
  
  annotations:
    recipe-id: a1b2c3d4
    recipe-version: "1.1"
    infrastructure-version: "1.0"
    last-updated: "2025-07-12"
    generated-by: infrastructure-manager-generator