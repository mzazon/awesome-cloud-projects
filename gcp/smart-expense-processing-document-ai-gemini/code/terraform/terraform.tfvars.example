# Example Terraform Variables Configuration
# Smart Expense Processing using Document AI and Gemini
# Copy this file to terraform.tfvars and customize the values

# ============================================================================
# REQUIRED VARIABLES - You must provide these values
# ============================================================================

# Your GCP project ID where resources will be created
project_id = "my-expense-processing-project"

# Strong password for the database application user (minimum 8 characters)
database_password = "MySecurePassword123!"

# Document AI processor ID (create manually first, then add here)
# document_ai_processor_id = "1234567890abcdef"

# ============================================================================
# CORE CONFIGURATION - Customize for your environment
# ============================================================================

# GCP region and zone for resources
region = "us-central1"
zone   = "us-central1-a"

# Environment label for resources (development, staging, production)
environment = "development"

# ============================================================================
# DATABASE CONFIGURATION
# ============================================================================

# PostgreSQL version for Cloud SQL
database_version = "POSTGRES_15"

# Database machine type (see: https://cloud.google.com/sql/pricing)
# Options: db-f1-micro, db-g1-small, db-n1-standard-1, etc.
database_tier = "db-f1-micro"

# Initial disk size in GB (minimum 10, maximum 30720)
database_disk_size = 20

# Database application user name
database_user = "expense_app"

# Enable deletion protection for the database (recommended for production)
deletion_protection = true

# ============================================================================
# CLOUD FUNCTIONS CONFIGURATION
# ============================================================================

# Maximum number of function instances for auto-scaling
max_function_instances = 10

# ============================================================================
# EXPENSE POLICY CONFIGURATION
# ============================================================================

# Corporate expense policy limits (in USD)
meal_daily_limit             = 75.00
hotel_nightly_limit          = 300.00
equipment_approval_threshold = 500.00
entertainment_limit          = 150.00

# Maximum expense amount for automatic approval
max_expense_amount = 1000.00

# ============================================================================
# GEMINI AI CONFIGURATION
# ============================================================================

# Gemini model version for expense validation
# Options: gemini-2.0-flash-exp, gemini-1.5-pro, gemini-1.5-flash
gemini_model = "gemini-2.0-flash-exp"

# ============================================================================
# REPORTING AND SCHEDULING
# ============================================================================

# Enable automated expense reports
enable_scheduled_reports = true

# Cron schedule for automated reports (Cloud Scheduler format)
# Default: Every Monday at 9 AM
report_schedule = "0 9 * * 1"

# ============================================================================
# MONITORING AND LOGGING
# ============================================================================

# Enable detailed monitoring and alerting
enable_detailed_monitoring = true

# Log retention period in days (1-3653)
log_retention_days = 30

# Enable debug logging (not recommended for production)
enable_debug_logging = false

# ============================================================================
# SECURITY CONFIGURATION
# ============================================================================

# Enable audit logging for compliance
enable_audit_logs = true

# Require SSL/TLS for database connections
require_ssl = true

# IP ranges allowed to access the database (CIDR notation)
# Note: Restrict this list in production for security
allowed_ip_ranges = ["0.0.0.0/0"]

# ============================================================================
# NOTIFICATION CONFIGURATION
# ============================================================================

# Email address for system notifications (optional)
notification_email = "admin@yourcompany.com"

# ============================================================================
# COST MANAGEMENT
# ============================================================================

# Monthly budget for infrastructure costs (in USD)
budget_amount = 100.00

# Budget alert thresholds as percentages
budget_alert_thresholds = [50, 80, 100]

# ============================================================================
# STORAGE CONFIGURATION
# ============================================================================

# Allow destruction of non-empty storage buckets
# WARNING: Set to true only for development/testing environments
force_destroy = false

# ============================================================================
# DEVELOPMENT/TESTING OVERRIDES
# ============================================================================

# Uncomment and modify these values for development environments

# Use smaller database tier for cost savings in development
# database_tier = "db-f1-micro"

# Reduce function scaling for development
# max_function_instances = 3

# Enable debug logging for troubleshooting
# enable_debug_logging = true

# Allow force destroy for easy cleanup in development
# force_destroy = true

# Shorter log retention for development
# log_retention_days = 7

# ============================================================================
# ADVANCED CONFIGURATION (Optional)
# ============================================================================

# These variables have sensible defaults but can be customized

# Document AI processor type (if creating new processor)
# create_document_ai_processor = false

# Custom labels for all resources
# additional_labels = {
#   department = "finance"
#   owner      = "expense-team"
#   cost-center = "12345"
# }