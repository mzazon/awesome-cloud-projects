# AI Content Validation with Vertex AI and Cloud Functions
# Infrastructure Manager Configuration
# 
# This configuration deploys:
# - Cloud Storage buckets for content input and validation results
# - Cloud Function for AI-powered content validation using Vertex AI
# - IAM service accounts and permissions
# - Required APIs enablement
# - Event-driven processing pipeline

# Import required modules
imports:
  - path: https://raw.githubusercontent.com/GoogleCloudPlatform/cloud-foundation-toolkit/master/dm/templates/storage/storage.py
    name: storage_bucket.py
  - path: https://raw.githubusercontent.com/GoogleCloudPlatform/cloud-foundation-toolkit/master/dm/templates/cloud_function/cloud_function.py
    name: cloud_function.py

# Template metadata
info:
  title: AI Content Validation Infrastructure
  description: Deploys complete infrastructure for AI-powered content validation using Vertex AI and Cloud Functions
  version: 1.0

# Input parameters for customization
parameters:
  project_id:
    type: string
    description: Google Cloud Project ID where resources will be deployed
    default: content-validation-project
  
  region:
    type: string
    description: Google Cloud region for resource deployment
    default: us-central1
    
  zone:
    type: string
    description: Google Cloud zone for resource deployment
    default: us-central1-a
    
  resource_suffix:
    type: string
    description: Unique suffix for resource names to avoid conflicts
    default: "001"
    
  function_memory:
    type: string
    description: Memory allocation for Cloud Function
    default: "512Mi"
    
  function_timeout:
    type: string
    description: Timeout duration for Cloud Function execution
    default: "60s"
    
  vertex_ai_model:
    type: string
    description: Vertex AI model for content validation
    default: "gemini-1.5-flash"
    
  safety_threshold:
    type: string
    description: Safety threshold for content validation
    default: "BLOCK_MEDIUM_AND_ABOVE"
    
  enable_monitoring:
    type: boolean
    description: Enable Cloud Monitoring for function metrics
    default: true
    
  enable_logging:
    type: boolean
    description: Enable Cloud Logging for function execution
    default: true

# Main resource definitions
resources:
  # Enable required Google Cloud APIs
  - name: enable-apis
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/cloudfunctions.googleapis.com
      
  - name: enable-storage-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/storage.googleapis.com
      
  - name: enable-aiplatform-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/aiplatform.googleapis.com
      
  - name: enable-cloudbuild-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/cloudbuild.googleapis.com
      
  - name: enable-eventarc-api
    type: gcp-types/serviceusage-v1:services
    properties:
      name: projects/$(ref.project_id.projectId)/services/eventarc.googleapis.com

  # Get project information for resource references
  - name: project_id
    type: gcp-types/cloudresourcemanager-v1:projects
    properties:
      projectId: {{ properties.project_id }}

  # IAM Service Account for Cloud Function
  - name: content-validator-service-account
    type: gcp-types/iam-v1:projects.serviceAccounts
    properties:
      accountId: content-validator-sa-{{ properties.resource_suffix }}
      displayName: Content Validator Service Account
      description: Service account for AI content validation Cloud Function
      parent: projects/{{ properties.project_id }}
    metadata:
      dependsOn:
        - enable-apis

  # IAM binding for Cloud Function service account - Storage Admin
  - name: function-storage-admin-binding
    type: gcp-types/cloudresourcemanager-v1:projects.setIamPolicy
    properties:
      resource: {{ properties.project_id }}
      policy:
        bindings:
          - role: roles/storage.admin
            members:
              - serviceAccount:$(ref.content-validator-service-account.email)
    metadata:
      dependsOn:
        - content-validator-service-account

  # IAM binding for Cloud Function service account - Vertex AI User
  - name: function-vertex-ai-binding
    type: gcp-types/cloudresourcemanager-v1:projects.setIamPolicy
    properties:
      resource: {{ properties.project_id }}
      policy:
        bindings:
          - role: roles/aiplatform.user
            members:
              - serviceAccount:$(ref.content-validator-service-account.email)
    metadata:
      dependsOn:
        - content-validator-service-account

  # IAM binding for Cloud Function service account - Logging Writer
  - name: function-logging-binding
    type: gcp-types/cloudresourcemanager-v1:projects.setIamPolicy
    properties:
      resource: {{ properties.project_id }}
      policy:
        bindings:
          - role: roles/logging.logWriter
            members:
              - serviceAccount:$(ref.content-validator-service-account.email)
    metadata:
      dependsOn:
        - content-validator-service-account

  # Cloud Storage bucket for content input
  - name: content-input-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: content-input-{{ properties.resource_suffix }}
      location: {{ properties.region }}
      storageClass: STANDARD
      versioning:
        enabled: false
      encryption:
        defaultKmsKeyName: null
      lifecycle:
        rule:
          - action:
              type: Delete
            condition:
              age: 30
              matchesStorageClass:
                - STANDARD
      iamConfiguration:
        uniformBucketLevelAccess:
          enabled: true
      labels:
        purpose: content-validation
        environment: development
        managed-by: infrastructure-manager
    metadata:
      dependsOn:
        - enable-storage-api

  # Cloud Storage bucket for validation results
  - name: validation-results-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: validation-results-{{ properties.resource_suffix }}
      location: {{ properties.region }}
      storageClass: STANDARD
      versioning:
        enabled: true
      encryption:
        defaultKmsKeyName: null
      lifecycle:
        rule:
          - action:
              type: Delete
            condition:
              age: 90
              matchesStorageClass:
                - STANDARD
      iamConfiguration:
        uniformBucketLevelAccess:
          enabled: true
      labels:
        purpose: validation-results
        environment: development
        managed-by: infrastructure-manager
    metadata:
      dependsOn:
        - enable-storage-api

  # Cloud Function source code as a ZIP archive in Cloud Storage
  - name: function-source-bucket
    type: gcp-types/storage-v1:buckets
    properties:
      name: function-source-{{ properties.resource_suffix }}
      location: {{ properties.region }}
      storageClass: STANDARD
      iamConfiguration:
        uniformBucketLevelAccess:
          enabled: true
      labels:
        purpose: function-source
        environment: development
        managed-by: infrastructure-manager
    metadata:
      dependsOn:
        - enable-storage-api

  # Cloud Function source archive (placeholder - will be uploaded separately)
  - name: function-source-archive
    type: gcp-types/storage-v1:objects
    properties:
      bucket: $(ref.function-source-bucket.name)
      name: content-validator-source.zip
      # Note: In real deployment, source code would be uploaded here
      # For this template, the source will be provided via gcloud commands
    metadata:
      dependsOn:
        - function-source-bucket

  # Cloud Function (2nd generation) for content validation
  - name: content-validator-function
    type: gcp-types/cloudfunctions-v2:projects.locations.functions
    properties:
      parent: projects/{{ properties.project_id }}/locations/{{ properties.region }}
      functionId: content-validator-{{ properties.resource_suffix }}
      function:
        description: AI-powered content validation using Vertex AI Gemini models
        buildConfig:
          runtime: python312
          entryPoint: validate_content
          source:
            storageSource:
              bucket: $(ref.function-source-bucket.name)
              object: $(ref.function-source-archive.name)
          environmentVariables:
            GOOGLE_FUNCTION_TARGET: validate_content
        serviceConfig:
          maxInstanceCount: 100
          minInstanceCount: 0
          availableMemory: {{ properties.function_memory }}
          timeoutSeconds: 60
          environmentVariables:
            RESULTS_BUCKET: $(ref.validation-results-bucket.name)
            VERTEX_AI_MODEL: {{ properties.vertex_ai_model }}
            SAFETY_THRESHOLD: {{ properties.safety_threshold }}
            FUNCTION_REGION: {{ properties.region }}
          serviceAccountEmail: $(ref.content-validator-service-account.email)
          ingressSettings: ALLOW_INTERNAL_ONLY
          allTrafficOnLatestRevision: true
        eventTrigger:
          eventType: google.cloud.storage.object.v1.finalized
          eventFilters:
            - attribute: bucket
              value: $(ref.content-input-bucket.name)
          retryPolicy: RETRY_POLICY_RETRY
          serviceAccountEmail: $(ref.content-validator-service-account.email)
        labels:
          purpose: content-validation
          environment: development
          managed-by: infrastructure-manager
    metadata:
      dependsOn:
        - enable-cloudfunctions-api
        - enable-eventarc-api
        - content-validator-service-account
        - content-input-bucket
        - validation-results-bucket
        - function-source-archive
        - function-storage-admin-binding
        - function-vertex-ai-binding
        - function-logging-binding

  # Cloud Monitoring notification channel (optional)
  - name: notification-channel
    type: gcp-types/monitoring-v1:projects.notificationChannels
    properties:
      parent: projects/{{ properties.project_id }}
      notificationChannel:
        type: email
        displayName: Content Validation Alerts
        description: Email notifications for content validation function issues
        labels:
          email_address: admin@example.com  # Replace with actual email
        enabled: {{ properties.enable_monitoring }}
    metadata:
      dependsOn:
        - project_id
    condition: {{ properties.enable_monitoring }}

  # Cloud Monitoring alerting policy for function errors
  - name: function-error-alert
    type: gcp-types/monitoring-v1:projects.alertPolicies
    properties:
      parent: projects/{{ properties.project_id }}
      alertPolicy:
        displayName: Content Validator Function Errors
        documentation:
          content: Alert when the content validation function encounters errors
          mimeType: text/markdown
        conditions:
          - displayName: Function execution errors
            conditionThreshold:
              filter: 'resource.type="cloud_function" AND resource.labels.function_name="content-validator-{{ properties.resource_suffix }}"'
              comparison: COMPARISON_GREATER_THAN
              thresholdValue: 0
              duration: 300s
              aggregations:
                - alignmentPeriod: 300s
                  perSeriesAligner: ALIGN_RATE
                  crossSeriesReducer: REDUCE_SUM
        combiner: OR
        enabled: {{ properties.enable_monitoring }}
        notificationChannels:
          - $(ref.notification-channel.name)
        alertStrategy:
          autoClose: 86400s  # 24 hours
    metadata:
      dependsOn:
        - content-validator-function
        - notification-channel
    condition: {{ properties.enable_monitoring }}

  # Log sink for content validation events
  - name: content-validation-log-sink
    type: gcp-types/logging-v2:projects.sinks
    properties:
      parent: projects/{{ properties.project_id }}
      sinkId: content-validation-events-{{ properties.resource_suffix }}
      sink:
        name: content-validation-events-{{ properties.resource_suffix }}
        description: Exports content validation function logs to Cloud Storage
        destination: storage.googleapis.com/$(ref.validation-results-bucket.name)/logs
        filter: 'resource.type="cloud_function" AND resource.labels.function_name="content-validator-{{ properties.resource_suffix }}"'
        includeChildren: false
    metadata:
      dependsOn:
        - validation-results-bucket
        - content-validator-function
    condition: {{ properties.enable_logging }}

# Output values for reference and integration
outputs:
  - name: content_input_bucket_name
    description: Name of the Cloud Storage bucket for content uploads
    value: $(ref.content-input-bucket.name)
    
  - name: validation_results_bucket_name
    description: Name of the Cloud Storage bucket for validation results
    value: $(ref.validation-results-bucket.name)
    
  - name: function_name
    description: Name of the deployed Cloud Function
    value: $(ref.content-validator-function.name)
    
  - name: function_url
    description: HTTP trigger URL for the Cloud Function (if applicable)
    value: $(ref.content-validator-function.serviceConfig.uri)
    
  - name: service_account_email
    description: Email of the service account used by the function
    value: $(ref.content-validator-service-account.email)
    
  - name: project_id
    description: Google Cloud Project ID
    value: {{ properties.project_id }}
    
  - name: region
    description: Deployment region
    value: {{ properties.region }}
    
  - name: function_source_bucket
    description: Cloud Storage bucket containing function source code
    value: $(ref.function-source-bucket.name)

# Deployment metadata and configuration
metadata:
  version: "1.0"
  description: "Complete infrastructure for AI content validation using Vertex AI and Cloud Functions"
  tags:
    - ai
    - content-validation
    - vertex-ai
    - cloud-functions
    - serverless
    - safety-scoring
  
  # Prerequisites and requirements
  requirements:
    apis:
      - cloudfunctions.googleapis.com
      - storage.googleapis.com
      - aiplatform.googleapis.com
      - cloudbuild.googleapis.com
      - eventarc.googleapis.com
      - monitoring.googleapis.com
      - logging.googleapis.com
    
    permissions:
      - roles/cloudfunctions.admin
      - roles/storage.admin
      - roles/iam.serviceAccountAdmin
      - roles/aiplatform.admin
      - roles/monitoring.editor
      - roles/logging.admin
    
    # Estimated costs (USD per month for moderate usage)
    estimated_monthly_cost:
      cloud_functions: 10-50
      vertex_ai: 20-100
      cloud_storage: 5-25
      monitoring_logging: 5-15
      total_range: 40-190
  
  # Security considerations
  security:
    - Service accounts use least privilege principles
    - Storage buckets have uniform bucket-level access
    - Function has internal-only ingress settings
    - Encryption at rest enabled for all storage
    - Automatic lifecycle policies for cost optimization
  
  # Best practices implemented
  best_practices:
    - Event-driven architecture for efficiency
    - Separate buckets for input and output
    - Comprehensive monitoring and alerting
    - Structured logging for debugging
    - Resource labeling for management
    - Configurable safety thresholds
    - Automatic cleanup policies