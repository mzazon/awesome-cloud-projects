{
  "app": "python app.py",
  "watch": {
    "include": [
      "**"
    ],
    "exclude": [
      "README.md",
      "cdk*.json",
      "requirements*.txt",
      "source.bat",
      "**/__pycache__",
      "**/*.pyc"
    ]
  },
  "context": {
    "@aws-cdk/aws-lambda:recognizeLayerVersion": true,
    "@aws-cdk/core:checkSecretUsage": true,
    "@aws-cdk/core:target-partitions": [
      "aws",
      "aws-cn"
    ],
    "@aws-cdk-containers/ecs-service-extensions:enableDefaultLogDriver": true,
    "@aws-cdk/aws-ec2:uniqueImdsv2TemplateName": true,
    "@aws-cdk/aws-ecs:arnFormatIncludesClusterName": true,
    "@aws-cdk/aws-iam:minimizePolicies": true,
    "@aws-cdk/core:validateSnapshotRemovalPolicy": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeyAliasStackSafeResourceName": true,
    "@aws-cdk/aws-s3:createDefaultLoggingPolicy": true,
    "@aws-cdk/aws-sns-subscriptions:restrictSqsDescryption": true,
    "@aws-cdk/aws-apigateway:disableCloudWatchRole": true,
    "@aws-cdk/core:enablePartitionLiterals": true,
    "@aws-cdk/aws-events:eventsTargetQueueSameAccount": true,
    "@aws-cdk/aws-iam:standardizedServicePrincipals": true,
    "@aws-cdk/aws-ecs:disableExplicitDeploymentControllerForCircuitBreaker": true,
    "@aws-cdk/aws-iam:importedRoleStackSafeDefaultPolicyName": true,
    "@aws-cdk/aws-s3:serverAccessLogsUseBucketPolicy": true,
    "@aws-cdk/aws-route53-patters:useCertificate": true,
    "@aws-cdk/customresources:installLatestAwsSdkDefault": false,
    "@aws-cdk/aws-rds:databaseProxyUniqueResourceName": true,
    "@aws-cdk/aws-codedeploy:removeAlarmsFromDeploymentGroup": true,
    "@aws-cdk/aws-apigateway:authorizerChangeDeploymentLogicalId": true,
    "@aws-cdk/aws-ec2:launchTemplateDefaultUserData": true,
    "@aws-cdk/aws-secretsmanager:useAttachedSecretResourcePolicyForSecretTargetAttachments": true,
    "@aws-cdk/aws-redshift:columnId": true,
    "@aws-cdk/aws-stepfunctions-tasks:enableLoggingConfiguration": true,
    "@aws-cdk/aws-ec2:restrictDefaultSecurityGroup": true,
    "@aws-cdk/aws-apigateway:requestValidatorUniqueId": true,
    "@aws-cdk/aws-kms:aliasNameRef": true,
    "@aws-cdk/aws-autoscaling:generateLaunchTemplateInsteadOfLaunchConfig": true,
    "@aws-cdk/core:includePrefixInUniqueNameGeneration": true,
    "@aws-cdk/aws-efs:denyAnonymousAccess": true,
    "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": true,
    "@aws-cdk/aws-lambda-nodejs:useLatestRuntimeVersion": true,
    "@aws-cdk/aws-efs:mountTargetOrderInsensitiveLogicalId": true,
    "@aws-cdk/aws-rds:auroraClusterChangeScopeOfInstanceParameterGroupWithEachParameters": true,
    "@aws-cdk/aws-appsync:useArnForSourceApiAssociationIdentifier": true,
    "@aws-cdk/aws-rds:preventRenderingDeprecatedCredentials": true,
    "@aws-cdk/aws-codepipeline-actions:useNewDefaultBranchForSourceAction": true,
    "@aws-cdk/aws-cloudwatch-actions:changeLambdaPermissionLogicalIdForLambdaAction": true,
    "@aws-cdk/aws-codepipeline:crossAccountKeysDefaultValueToFalse": true,
    "@aws-cdk/aws-codepipeline:defaultPipelineTypeToV2": true,
    "@aws-cdk/aws-kms:reduceCrossAccountRegionPolicyScope": true,
    "@aws-cdk/aws-eks:nodegroupNameAttribute": true,
    "@aws-cdk/aws-ec2:ebsDefaultGp3Volume": true,
    "@aws-cdk/aws-ecs:removeDefaultDeploymentAlarm": true,
    "@aws-cdk/custom-resources:logApiResponseDataPropertyTrueDefault": false,
    "@aws-cdk/aws-s3:keepNotificationInImportedBucket": false,
    "@aws-cdk/aws-ecs:reduceEc2FargateCloudWatchPermissions": true,
    "@aws-cdk/aws-ec2:ec2SumTImeoutEnabled": true,
    "@aws-cdk/aws-appsync:appSyncGraphQLEndpointOutput": true,
    "@aws-cdk/aws-ec2:unrestrictedSourceInPrefixList": true,
    "@aws-cdk/aws-opensearchservice:enableOpensearchMultiAzWithStandby": true,
    "@aws-cdk/aws-servicecatalog:productVersionArnIncludeAccountId": true,
    "@aws-cdk/aws-cloudformation:cfnIncludeRejectComplexResourceUpdateCreatePolicyIntrinsics": true,
    "@aws-cdk/aws-codepipeline-actions:updateCodeBuildPrivilegedModeDefault": true,
    
    "domain_name": "api-demo.example.com",
    "random_suffix": "abc123",
    "primary_region": "us-east-1",
    "secondary_region": "us-west-2",
    
    "description": "Cross-Region Service Failover with VPC Lattice and Route53",
    "tags": {
      "Project": "CrossRegionFailover",
      "Environment": "production",
      "ManagedBy": "CDK",
      "Recipe": "cross-region-service-failover-lattice-route53",
      "CostCenter": "Infrastructure",
      "Owner": "DevOps"
    },
    
    "feature_flags": {
      "enable_route53_failover": true,
      "enable_cloudwatch_monitoring": true,
      "enable_vpc_endpoints": true,
      "enable_health_checks": true
    },
    
    "configuration": {
      "vpc": {
        "primary_cidr": "10.0.0.0/16",
        "secondary_cidr": "10.1.0.0/16",
        "max_azs": 2,
        "enable_nat_gateway": false,
        "enable_vpn_gateway": false,
        "enable_dns_hostnames": true,
        "enable_dns_support": true
      },
      "lambda": {
        "runtime": "python3.11",
        "timeout": 30,
        "memory_size": 256,
        "log_retention_days": 7,
        "environment_variables": {
          "SIMULATE_FAILURE": "false"
        }
      },
      "vpc_lattice": {
        "health_check_interval": 30,
        "health_check_timeout": 5,
        "healthy_threshold": 2,
        "unhealthy_threshold": 3,
        "protocol": "HTTPS",
        "port": 443
      },
      "route53": {
        "health_check_interval": 30,
        "health_check_failure_threshold": 3,
        "dns_ttl": 60,
        "health_check_request_interval": 30
      },
      "cloudwatch": {
        "alarm_evaluation_periods": 2,
        "alarm_comparison_operator": "LessThanThreshold",
        "alarm_threshold": 1,
        "metric_period_minutes": 1
      }
    },
    
    "deployment": {
      "termination_protection": false,
      "enable_diff": true,
      "require_approval": "never",
      "notifications": false,
      "rollback": {
        "on_failure": true
      }
    },
    
    "security": {
      "enforce_ssl": true,
      "enable_vpc_flow_logs": false,
      "enable_access_logging": true,
      "encryption_at_rest": true,
      "encryption_in_transit": true
    },
    
    "monitoring": {
      "enable_detailed_monitoring": true,
      "enable_x_ray_tracing": false,
      "log_level": "INFO",
      "retention_days": 7
    }
  }
}