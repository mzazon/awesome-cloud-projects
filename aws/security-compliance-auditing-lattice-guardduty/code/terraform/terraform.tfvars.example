# terraform.tfvars.example
# Copy this file to terraform.tfvars and customize for your environment

# ==============================================================================
# BASIC CONFIGURATION
# ==============================================================================

# AWS region where resources will be deployed
aws_region = "us-east-1"

# Environment name (dev, staging, prod, test)
environment = "dev"

# Project name for resource tagging and organization
project_name = "security-compliance-auditing"

# ==============================================================================
# NOTIFICATION CONFIGURATION
# ==============================================================================

# Email address to receive security alerts
# Leave empty ("") to skip email subscription
notification_email = "security-team@yourcompany.com"

# ==============================================================================
# SECURITY CONFIGURATION
# ==============================================================================

# GuardDuty finding publication frequency
# Options: FIFTEEN_MINUTES, ONE_HOUR, SIX_HOURS
guardduty_finding_frequency = "FIFTEEN_MINUTES"

# Enable GuardDuty protection features
enable_guardduty_malware_protection   = true
enable_guardduty_kubernetes_protection = true
enable_guardduty_s3_protection        = true

# ==============================================================================
# MONITORING AND ALERTING
# ==============================================================================

# CloudWatch alarm threshold for error rate (number of errors per period)
error_rate_threshold = 10

# Enable enhanced monitoring with additional CloudWatch alarms
enable_enhanced_monitoring = true

# CloudWatch log retention period in days
# Valid values: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653
log_retention_days = 90

# ==============================================================================
# LAMBDA FUNCTION CONFIGURATION
# ==============================================================================

# Lambda function name
lambda_function_name = "security-compliance-processor"

# Python runtime version
# Options: python3.9, python3.10, python3.11, python3.12
lambda_runtime = "python3.12"

# Lambda function timeout in seconds (1-900)
lambda_timeout = 60

# Lambda function memory size in MB (128-10240)
lambda_memory_size = 256

# Lambda log level
# Options: DEBUG, INFO, WARNING, ERROR, CRITICAL
lambda_log_level = "INFO"

# ==============================================================================
# STORAGE CONFIGURATION
# ==============================================================================

# S3 bucket prefix for compliance reports storage
bucket_prefix = "security-audit-logs"

# Enable S3 lifecycle policies for cost optimization
s3_lifecycle_enabled = true

# Enable S3 Intelligent Tiering (additional cost but automatic optimization)
s3_intelligent_tiering_enabled = false

# Compliance data retention period in years (1-10)
compliance_retention_years = 7

# ==============================================================================
# VPC LATTICE CONFIGURATION
# ==============================================================================

# Create demo VPC Lattice service network for testing
# Set to false in production environments
create_demo_vpc_lattice = true

# VPC Lattice service network name prefix
vpc_lattice_service_network_prefix = "security-demo-network"

# ==============================================================================
# ADVANCED CONFIGURATION
# ==============================================================================

# Custom environment variables for Lambda function
# custom_lambda_environment_variables = {
#   "CUSTOM_SETTING_1" = "value1"
#   "CUSTOM_SETTING_2" = "value2"
# }

# Additional Lambda layers (ARNs)
# additional_lambda_layers = [
#   "arn:aws:lambda:us-east-1:123456789012:layer:my-layer:1"
# ]

# VPC configuration for Lambda function (optional)
# Uncomment and configure if you want to deploy Lambda in a VPC
# vpc_config = {
#   subnet_ids         = ["subnet-12345678", "subnet-87654321"]
#   security_group_ids = ["sg-abcdef12"]
# }

# ==============================================================================
# ENCRYPTION CONFIGURATION
# ==============================================================================

# Enable encryption in transit for all communications
enable_encryption_in_transit = true

# Enable encryption at rest for all storage
enable_encryption_at_rest = true

# KMS key ID for CloudWatch Logs encryption (leave empty for default)
# cloudwatch_kms_key_id = "arn:aws:kms:us-east-1:123456789012:key/12345678-1234-1234-1234-123456789012"

# ==============================================================================
# FEATURE FLAGS
# ==============================================================================

# Enable cross-region replication for compliance reports
# Requires additional configuration and increases costs
enable_cross_region_replication = false

# Enable automated remediation responses to security threats
# Requires additional development of remediation actions
enable_automated_remediation = false

# Enable machine learning-based analysis for advanced threat detection
# Experimental feature for future enhancement
enable_machine_learning_analysis = false

# ==============================================================================
# RESOURCE NAMING CONFIGURATION
# ==============================================================================

# CloudWatch log group name for VPC Lattice access logs
log_group_name = "/aws/vpclattice/security-audit"

# SNS topic prefix for security alerts
sns_topic_prefix = "security-alerts"

# CloudWatch dashboard name
cloudwatch_dashboard_name = "SecurityComplianceDashboard"

# ==============================================================================
# ADDITIONAL TAGS
# ==============================================================================

# Additional tags to apply to all resources
# These will be merged with the default tags
additional_tags = {
  "Owner"       = "SecurityTeam"
  "CostCenter"  = "IT-Security"
  "Compliance"  = "SOC2"
  "DataClass"   = "Internal"
}

# ==============================================================================
# EXAMPLE CONFIGURATIONS FOR DIFFERENT ENVIRONMENTS
# ==============================================================================

# DEVELOPMENT ENVIRONMENT
# ------------------------
# environment = "dev"
# create_demo_vpc_lattice = true
# log_retention_days = 30
# lambda_log_level = "DEBUG"
# error_rate_threshold = 20
# enable_enhanced_monitoring = false

# STAGING ENVIRONMENT
# -------------------
# environment = "staging"
# create_demo_vpc_lattice = false
# log_retention_days = 60
# lambda_log_level = "INFO"
# error_rate_threshold = 15
# enable_enhanced_monitoring = true

# PRODUCTION ENVIRONMENT
# ----------------------
# environment = "prod"
# create_demo_vpc_lattice = false
# log_retention_days = 365
# lambda_log_level = "WARNING"
# error_rate_threshold = 5
# enable_enhanced_monitoring = true
# compliance_retention_years = 7
# enable_cross_region_replication = true

# ==============================================================================
# COST OPTIMIZATION SETTINGS
# ==============================================================================

# For cost-conscious deployments:
# - Set log_retention_days to 30 or 60
# - Set lambda_memory_size to 128 (if performance allows)
# - Set guardduty_finding_frequency to "SIX_HOURS"
# - Set s3_lifecycle_enabled to true
# - Disable create_demo_vpc_lattice in production

# For maximum security and compliance:
# - Set log_retention_days to 365 or higher
# - Set lambda_log_level to "DEBUG" initially, then "INFO" in production
# - Set guardduty_finding_frequency to "FIFTEEN_MINUTES"
# - Enable all guardduty protection features
# - Set compliance_retention_years to 7 or higher
# - Enable cross_region_replication for critical environments