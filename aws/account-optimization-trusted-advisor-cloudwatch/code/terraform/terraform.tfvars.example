# ==============================================================================
# Example Terraform Variables Configuration
# ==============================================================================
# Copy this file to terraform.tfvars and customize the values for your
# specific deployment. This file provides examples for all configurable
# variables with reasonable defaults and explanations.
# ==============================================================================

# ==============================================================================
# Project Configuration
# ==============================================================================

# Name used for resource naming and tagging
project_name = "trusted-advisor"

# Environment designation (dev, test, staging, prod)
environment = "prod"

# Additional tags for all resources (beyond standard tags)
additional_tags = {
  Owner       = "Operations Team"
  CostCenter  = "IT-Infrastructure"
  Department  = "Engineering"
  Compliance  = "Required"
}

# ==============================================================================
# Notification Configuration
# ==============================================================================

# Email addresses to receive Trusted Advisor alerts
# Recipients will receive confirmation emails that must be accepted
notification_emails = [
  "ops-team@company.com",
  "security-team@company.com",
  "cost-optimization@company.com"
]

# KMS key for SNS topic encryption (optional)
# Default uses AWS managed key, specify custom key for enhanced security
sns_kms_key_id = "alias/aws/sns"

# Whether to send notifications when alarms return to OK state
send_ok_notifications = false

# ==============================================================================
# CloudWatch Alarm Configuration
# ==============================================================================

# Period in seconds for alarm evaluation (300 = 5 minutes)
alarm_evaluation_period = 300

# Number of periods for alarm evaluation (1 = immediate alerting)
alarm_evaluation_periods = 1

# ==============================================================================
# Trusted Advisor Check Thresholds
# ==============================================================================

# Number of underutilized EC2 instances that trigger cost optimization alerts
cost_optimization_threshold = 1

# Number of security group issues that trigger security alerts
security_threshold = 1

# Percentage of service limit usage that triggers limit alerts (50-95%)
service_limits_threshold = 80

# ==============================================================================
# Optional Trusted Advisor Checks
# ==============================================================================

# Enable IAM access key rotation monitoring
enable_iam_key_rotation_alarm = true

# Enable RDS security group monitoring
enable_rds_security_alarm = true

# Enable S3 bucket permissions monitoring
enable_s3_permissions_alarm = true

# ==============================================================================
# Advanced Configuration (Optional)
# ==============================================================================

# Custom notification format (json, text, custom)
notification_format = "text"

# Compliance framework alignment (none, sox, pci, hipaa, iso27001, custom)
compliance_framework = "none"

# Data retention period in days (0 = AWS defaults)
retention_period_days = 90

# ==============================================================================
# Example Configurations for Different Environments
# ==============================================================================

# Development Environment Example:
# project_name = "trusted-advisor-dev"
# environment = "dev"
# notification_emails = ["dev-team@company.com"]
# cost_optimization_threshold = 5
# security_threshold = 3
# service_limits_threshold = 90
# enable_iam_key_rotation_alarm = false
# enable_rds_security_alarm = false
# enable_s3_permissions_alarm = false

# Production Environment Example:
# project_name = "trusted-advisor-prod"
# environment = "prod"
# notification_emails = [
#   "operations@company.com",
#   "security@company.com",
#   "management@company.com"
# ]
# cost_optimization_threshold = 1
# security_threshold = 1
# service_limits_threshold = 75
# enable_iam_key_rotation_alarm = true
# enable_rds_security_alarm = true
# enable_s3_permissions_alarm = true
# send_ok_notifications = true
# compliance_framework = "sox"

# High-Volume Environment Example:
# project_name = "trusted-advisor-enterprise"
# environment = "prod"
# notification_emails = ["enterprise-ops@company.com"]
# cost_optimization_threshold = 10
# security_threshold = 5
# service_limits_threshold = 85
# alarm_evaluation_period = 900  # 15 minutes
# alarm_evaluation_periods = 2   # Require 2 consecutive breaches
# send_ok_notifications = true

# ==============================================================================
# Configuration Notes
# ==============================================================================

# 1. Email Confirmation Required:
#    - All email addresses will receive confirmation messages
#    - Recipients must click confirmation links to receive alerts
#    - Unconfirmed subscriptions will not receive notifications

# 2. Region Requirements:
#    - This configuration must be deployed in us-east-1
#    - Trusted Advisor metrics are only available in us-east-1
#    - All resources will be created in us-east-1 regardless of local region

# 3. AWS Support Plan Requirements:
#    - Business, Enterprise On-Ramp, or Enterprise Support required
#    - Basic support only provides limited Trusted Advisor checks
#    - Full functionality requires paid support plans

# 4. Cost Considerations:
#    - SNS: $0.50 per million notifications (first 1,000/month free)
#    - CloudWatch: First 10 alarms free, then $0.10/alarm/month
#    - Typical monthly cost: $0.50-$3.00 for standard usage

# 5. Threshold Guidelines:
#    - Lower thresholds = more sensitive alerting
#    - Higher thresholds = fewer false positives
#    - Start conservative and adjust based on your environment

# 6. Security Best Practices:
#    - Use custom KMS keys for sensitive environments
#    - Limit notification_emails to authorized personnel only
#    - Enable additional checks (IAM, RDS, S3) for comprehensive monitoring
#    - Regular review of alert patterns and threshold adjustments