# =============================================================================
# Example Terraform Variables for Knowledge Management Assistant
# =============================================================================
# Copy this file to terraform.tfvars and customize for your environment.
# Remove the .example extension: cp terraform.tfvars.example terraform.tfvars
# =============================================================================

# =============================================================================
# General Configuration
# =============================================================================

# AWS region where resources will be deployed
# Ensure Bedrock Agents are available in your chosen region
aws_region = "us-east-1"

# Project name used for resource naming and tagging
project_name = "knowledge-management-assistant"

# Environment name (dev, staging, prod)
environment = "dev"

# Common tags applied to all resources
common_tags = {
  Project      = "knowledge-management-assistant"
  Environment  = "dev"
  ManagedBy    = "terraform"
  Owner        = "devops-team"
  CostCenter   = "engineering"
  Department   = "technology"
  Application  = "knowledge-assistant"
}

# =============================================================================
# S3 Configuration
# =============================================================================

# Prefix for S3 bucket name (will have random suffix added)
bucket_prefix = "knowledge-docs"

# Enable versioning for document history tracking
enable_s3_versioning = true

# Server-side encryption algorithm
s3_encryption_algorithm = "AES256"

# Default storage class for new objects
s3_storage_class = "STANDARD"

# =============================================================================
# Bedrock Configuration
# =============================================================================

# Name for the Knowledge Base
knowledge_base_name = "enterprise-knowledge-base"

# Name for the Bedrock Agent
agent_name = "knowledge-assistant"

# Foundation model for the agent (Claude 3.5 Sonnet)
foundation_model = "anthropic.claude-3-5-sonnet-20241022-v2:0"

# Embedding model for document vectorization
embedding_model = "amazon.titan-embed-text-v2:0"

# Custom instructions for the agent behavior
agent_instruction = <<EOF
You are a helpful enterprise knowledge management assistant powered by Amazon Bedrock. Your role is to help employees find accurate information from company documents, policies, and procedures. Always provide specific, actionable answers and cite sources when possible. If you cannot find relevant information in the knowledge base, clearly state that and suggest alternative resources or contacts. Maintain a professional tone while being conversational and helpful. When providing policy information, always mention if employees should verify with HR for the most current version.
EOF

# Session timeout for agent interactions (in seconds)
agent_idle_session_ttl = 1800

# =============================================================================
# OpenSearch Serverless Configuration
# =============================================================================

# Name for OpenSearch collection (will have random suffix added)
opensearch_collection_name = "kb-collection"

# Name for the vector index
vector_index_name = "knowledge-index"

# =============================================================================
# Knowledge Base Data Source Configuration
# =============================================================================

# Document chunking strategy
chunking_strategy = "FIXED_SIZE"

# Maximum tokens per chunk
max_tokens = 300

# Overlap percentage between chunks
overlap_percentage = 20

# S3 prefixes to include in knowledge base
inclusion_prefixes = ["documents/"]

# =============================================================================
# Lambda Configuration
# =============================================================================

# Name for Lambda function (will have random suffix added)
lambda_function_name = "bedrock-agent-proxy"

# Python runtime version
lambda_runtime = "python3.12"

# Function timeout in seconds
lambda_timeout = 30

# Memory allocation in MB
lambda_memory_size = 256

# CloudWatch log retention period
lambda_log_retention_days = 14

# Enable debug logging (not recommended for production)
enable_debug_logging = false

# =============================================================================
# API Gateway Configuration
# =============================================================================

# Name for API Gateway (will have random suffix added)
api_name = "knowledge-management-api"

# API description
api_description = "Knowledge Management Assistant API"

# Endpoint type (REGIONAL, EDGE, or PRIVATE)
api_endpoint_type = "REGIONAL"

# Stage name for deployment
api_stage_name = "prod"

# Enable CloudWatch logging for API Gateway
enable_api_gateway_logging = true

# CloudWatch log retention period for API Gateway
api_log_retention_days = 14

# =============================================================================
# Security Configuration
# =============================================================================

# Enable encryption at rest for all applicable services
enable_encryption_at_rest = true

# Enable encryption in transit
enable_encryption_in_transit = true

# Optional: Specify custom KMS key ID (leave empty for AWS managed keys)
kms_key_id = ""

# Enable CORS for API Gateway
enable_cors = true

# Allowed origins for CORS (use specific domains in production)
cors_allowed_origins = ["*"]

# Allowed HTTP methods for CORS
cors_allowed_methods = ["GET", "POST", "OPTIONS"]

# Allowed headers for CORS
cors_allowed_headers = [
  "Content-Type",
  "X-Amz-Date",
  "Authorization",
  "X-Api-Key",
  "X-Amz-Security-Token"
]

# =============================================================================
# Monitoring Configuration
# =============================================================================

# Enable CloudWatch alarms
enable_cloudwatch_alarms = true

# Lambda error threshold for alarms
lambda_error_threshold = 5

# API Gateway 4XX error threshold
api_4xx_error_threshold = 10

# Number of evaluation periods for alarms
alarm_evaluation_periods = 2

# Period in seconds for alarm evaluation
alarm_period_seconds = 300

# =============================================================================
# Cost Optimization Configuration
# =============================================================================

# Enable cost optimization features
enable_cost_optimization = true

# =============================================================================
# Development and Testing Configuration
# =============================================================================

# Create sample documents for testing
create_sample_documents = true

# Deploy additional test resources
deploy_test_resources = false

# =============================================================================
# Example Production Configuration
# =============================================================================

# Uncomment and modify for production deployment:
#
# environment = "prod"
# 
# common_tags = {
#   Project      = "knowledge-management-assistant"
#   Environment  = "production"
#   ManagedBy    = "terraform"
#   Owner        = "platform-team"
#   CostCenter   = "engineering"
#   Compliance   = "required"
#   BackupPolicy = "daily"
# }
#
# # Production security settings
# cors_allowed_origins = ["https://yourcompany.com", "https://app.yourcompany.com"]
# 
# # Enhanced monitoring
# lambda_log_retention_days = 30
# api_log_retention_days = 30
# 
# # Production performance settings
# lambda_memory_size = 512
# lambda_timeout = 60
#
# # Custom agent instructions for your organization
# agent_instruction = <<EOF
# You are the official knowledge assistant for ACME Corporation.
# Provide accurate information from our company policies, procedures, and documentation.
# Always maintain confidentiality and refer users to HR for sensitive matters.
# Available topics include: HR policies, IT procedures, compliance guidelines, and operational standards.
# For urgent matters, direct users to contact support@acme.com or call 1-800-ACME-HELP.
# EOF

# =============================================================================
# Example Multi-Region Configuration
# =============================================================================

# For disaster recovery or global deployment:
#
# aws_region = "us-west-2"  # Secondary region
#
# common_tags = {
#   Project      = "knowledge-management-assistant"
#   Environment  = "prod"
#   ManagedBy    = "terraform"
#   Region       = "us-west-2"
#   Purpose      = "disaster-recovery"
# }