# =============================================================================
# Example Terraform Variables Configuration
# =============================================================================
# Copy this file to terraform.tfvars and customize the values for your deployment.
# cp terraform.tfvars.example terraform.tfvars

# =============================================================================
# Basic Configuration
# =============================================================================

# Prefix for the S3 bucket name (a random suffix will be added automatically)
bucket_prefix = "my-visual-website"

# Environment name for resource tagging and identification
environment = "demo"

# =============================================================================
# Website Configuration
# =============================================================================

# Name of the index document (homepage)
index_document = "index.html"

# Name of the error document (404 page)
error_document = "error.html"

# Whether to upload sample HTML content for demonstration
upload_sample_content = true

# =============================================================================
# Security and Access Settings
# =============================================================================

# Enable versioning on the S3 bucket (recommended for production)
enable_versioning = false

# Allow the bucket to be destroyed even if it contains objects
# WARNING: Set to true only for testing environments
force_destroy = false

# =============================================================================
# Monitoring and Alerting (Optional)
# =============================================================================

# Enable CloudWatch monitoring and alarms
enable_monitoring = false

# CloudWatch alarm threshold for bucket size (in bytes)
# Default: 1 GB
bucket_size_threshold = 1073741824

# CloudWatch alarm threshold for number of objects
object_count_threshold = 1000

# SNS topic ARN for alarm notifications (leave empty to disable)
# Example: "arn:aws:sns:us-east-1:123456789012:alerts"
sns_topic_arn = ""

# =============================================================================
# Advanced Configuration (Optional)
# =============================================================================

# Additional tags to apply to all resources
additional_tags = {
  Owner       = "your-name"
  Project     = "infrastructure-demo"
  CostCenter  = "engineering"
  Team        = "platform"
}

# AWS region (optional - uses provider default if not specified)
# aws_region = "us-east-1"

# Content Security Policy header for enhanced security
content_security_policy = "default-src 'self'; style-src 'self' 'unsafe-inline'; script-src 'self'"

# =============================================================================
# CORS Configuration (Optional)
# =============================================================================

# CORS rules for cross-origin requests (uncomment if needed)
# cors_rules = [
#   {
#     allowed_headers = ["*"]
#     allowed_methods = ["GET", "HEAD"]
#     allowed_origins = ["*"]
#     expose_headers  = ["ETag"]
#     max_age_seconds = 3000
#   }
# ]

# =============================================================================
# Lifecycle Management (Optional)
# =============================================================================

# Lifecycle rules for object management (uncomment if needed)
# lifecycle_rules = [
#   {
#     id                          = "cleanup_old_versions"
#     enabled                     = true
#     prefix                      = ""
#     expiration_days            = 365
#     noncurrent_version_expiration_days = 30
#   }
# ]

# =============================================================================
# Example Configurations for Different Environments
# =============================================================================

# Development Environment Example:
# bucket_prefix = "dev-visual-website"
# environment = "dev"
# enable_versioning = false
# force_destroy = true
# upload_sample_content = true

# Staging Environment Example:
# bucket_prefix = "stage-visual-website"
# environment = "staging"
# enable_versioning = true
# force_destroy = false
# enable_monitoring = true
# upload_sample_content = false

# Production Environment Example:
# bucket_prefix = "prod-visual-website"
# environment = "prod"
# enable_versioning = true
# force_destroy = false
# enable_monitoring = true
# upload_sample_content = false
# sns_topic_arn = "arn:aws:sns:us-east-1:123456789012:production-alerts"

# =============================================================================
# Notes and Best Practices
# =============================================================================

# 1. Bucket Naming:
#    - Bucket names must be globally unique across all AWS accounts
#    - Use descriptive prefixes and let Terraform add random suffixes
#    - Follow S3 bucket naming conventions (lowercase, no special characters)

# 2. Security:
#    - Enable versioning for production environments
#    - Consider enabling CloudTrail logging for audit trails
#    - Use least privilege principles for IAM permissions

# 3. Monitoring:
#    - Enable CloudWatch monitoring for production workloads
#    - Set up SNS notifications for important alerts
#    - Consider using AWS Config for compliance monitoring

# 4. Cost Optimization:
#    - Use lifecycle rules to transition or delete old objects
#    - Monitor CloudWatch metrics for usage patterns
#    - Consider S3 Intelligent Tiering for automatic cost optimization

# 5. Backup and Recovery:
#    - Enable versioning to protect against accidental deletions
#    - Consider cross-region replication for disaster recovery
#    - Implement regular backup strategies for critical content