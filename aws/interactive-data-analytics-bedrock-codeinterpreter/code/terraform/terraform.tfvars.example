# Terraform Variables Configuration Example
# Copy this file to terraform.tfvars and customize for your environment

# ============================================================================
# BASIC CONFIGURATION
# ============================================================================

# Environment name - affects resource naming and tagging
environment = "dev"

# Project name - used as prefix for resource names
project_name = "analytics"

# AWS region for deployment
aws_region = "us-east-1"

# ============================================================================
# LAMBDA FUNCTION CONFIGURATION
# ============================================================================

# Lambda function timeout (30-900 seconds)
lambda_timeout = 300

# Lambda memory allocation (128-10240 MB)
# Higher memory = better performance but higher cost
lambda_memory_size = 512

# Reserved concurrency for Lambda function
# Controls maximum concurrent executions
lambda_reserved_concurrency = 10

# ============================================================================
# S3 STORAGE LIFECYCLE CONFIGURATION
# ============================================================================

# Days before transitioning to Infrequent Access storage class
s3_lifecycle_transition_days = 30

# Days before transitioning to Glacier storage class
s3_glacier_transition_days = 90

# Days before expiring result objects (automatic deletion)
s3_results_expiration_days = 365

# ============================================================================
# MONITORING AND LOGGING
# ============================================================================

# CloudWatch log retention period in days
# Valid values: 1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653
cloudwatch_log_retention_days = 30

# Number of evaluation periods for CloudWatch alarms
alarm_evaluation_periods = 2

# Error threshold for triggering CloudWatch alarms
alarm_threshold_errors = 3

# ============================================================================
# API GATEWAY CONFIGURATION
# ============================================================================

# Whether to create API Gateway for external access
enable_api_gateway = true

# API Gateway throttle rate (requests per second)
api_gateway_throttle_rate = 100

# API Gateway throttle burst limit
api_gateway_throttle_burst = 200

# ============================================================================
# BEDROCK CONFIGURATION
# ============================================================================

# Bedrock model ID for AI operations
# Available models: anthropic.claude-3-5-sonnet-20241022-v2:0, etc.
bedrock_model_id = "anthropic.claude-3-5-sonnet-20241022-v2:0"

# Code interpreter session timeout (300-7200 seconds)
code_interpreter_session_timeout = 3600

# ============================================================================
# OPTIONAL FEATURES
# ============================================================================

# Enable X-Ray tracing for debugging and performance analysis
enable_xray_tracing = false

# Enable detailed CloudWatch monitoring
enable_detailed_monitoring = false

# ============================================================================
# ADDITIONAL TAGS
# ============================================================================

# Custom tags to apply to all resources
additional_tags = {
  Owner       = "data-team"
  CostCenter  = "analytics"
  Purpose     = "interactive-data-analysis"
  Compliance  = "required"
}

# ============================================================================
# ENVIRONMENT-SPECIFIC EXAMPLES
# ============================================================================

# Example for Development Environment:
# environment = "dev"
# lambda_memory_size = 256
# lambda_reserved_concurrency = 3
# enable_api_gateway = false
# cloudwatch_log_retention_days = 7
# s3_lifecycle_transition_days = 7
# s3_glacier_transition_days = 30

# Example for Staging Environment:
# environment = "staging"
# lambda_memory_size = 512
# lambda_reserved_concurrency = 5
# enable_api_gateway = true
# cloudwatch_log_retention_days = 14
# enable_detailed_monitoring = true

# Example for Production Environment:
# environment = "prod"
# lambda_memory_size = 1024
# lambda_reserved_concurrency = 20
# enable_api_gateway = true
# enable_xray_tracing = true
# enable_detailed_monitoring = true
# cloudwatch_log_retention_days = 90
# api_gateway_throttle_rate = 1000
# api_gateway_throttle_burst = 2000

# ============================================================================
# COST OPTIMIZATION TIPS
# ============================================================================

# For cost optimization in development:
# - Set lower lambda_memory_size (256-512 MB)
# - Reduce lambda_reserved_concurrency (1-5)
# - Disable enable_api_gateway
# - Use shorter cloudwatch_log_retention_days (7-14)
# - Set aggressive S3 lifecycle policies

# For high-performance production:
# - Increase lambda_memory_size (1024+ MB)
# - Set higher lambda_reserved_concurrency (10-50)
# - Enable enable_xray_tracing and enable_detailed_monitoring
# - Use longer cloudwatch_log_retention_days (30-90)
# - Implement cross-region replication for disaster recovery