AWSTemplateFormatVersion: '2010-09-09'
Description: 'Enterprise Oracle Database Connectivity with VPC Lattice and S3 - Production-ready infrastructure for secure Oracle Database@AWS integration with AWS analytics services'

# Template Metadata
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Oracle Database Configuration"
        Parameters:
          - OdbNetworkId
          - OracleBackupRetentionDays
      - Label:
          default: "Storage Configuration"
        Parameters:
          - S3BucketName
          - EnableS3Versioning
          - S3LifecycleTransitionDays
      - Label:
          default: "Analytics Configuration"
        Parameters:
          - RedshiftClusterType
          - RedshiftNodeType
          - RedshiftMasterUsername
          - RedshiftMasterPassword
          - RedshiftDatabaseName
          - EnableRedshiftEncryption
      - Label:
          default: "Monitoring Configuration"
        Parameters:
          - CloudWatchLogRetentionDays
          - EnableCloudWatchDashboard
          - NotificationEmail
      - Label:
          default: "Security Configuration"
        Parameters:
          - EnableS3Encryption
          - KMSKeyId
          - RestrictS3AccessToODB
      - Label:
          default: "General Configuration"
        Parameters:
          - Environment
          - ProjectName
          - ResourceNamingSuffix
    ParameterLabels:
      OdbNetworkId:
        default: "Oracle Database@AWS Network ID"
      RedshiftClusterType:
        default: "Redshift Cluster Type"
      RedshiftNodeType:
        default: "Redshift Node Type"
      EnableS3Encryption:
        default: "Enable S3 Server-Side Encryption"

# Input Parameters
Parameters:
  # Oracle Database Configuration
  OdbNetworkId:
    Type: String
    Description: 'Existing Oracle Database@AWS Network ID (e.g., odb-network-0123456789abcdef0)'
    AllowedPattern: '^odb-network-[0-9a-f]{17}$'
    ConstraintDescription: 'Must be a valid Oracle Database@AWS Network ID'

  OracleBackupRetentionDays:
    Type: Number
    Description: 'Number of days to retain Oracle database backups in S3'
    Default: 30
    MinValue: 7
    MaxValue: 365

  # Storage Configuration
  S3BucketName:
    Type: String
    Description: 'Name for the S3 bucket (leave empty for auto-generated name)'
    Default: ''
    AllowedPattern: '^$|^[a-z0-9.-]*$'
    ConstraintDescription: 'S3 bucket name must contain only lowercase letters, numbers, periods, and hyphens'

  EnableS3Versioning:
    Type: String
    Description: 'Enable S3 bucket versioning for backup protection'
    Default: 'true'
    AllowedValues: ['true', 'false']

  S3LifecycleTransitionDays:
    Type: Number
    Description: 'Days after which to transition backups to Intelligent-Access tier'
    Default: 30
    MinValue: 1
    MaxValue: 365

  # Analytics Configuration
  RedshiftClusterType:
    Type: String
    Description: 'Redshift cluster type'
    Default: 'single-node'
    AllowedValues: ['single-node', 'multi-node']

  RedshiftNodeType:
    Type: String
    Description: 'Redshift node type for the cluster'
    Default: 'dc2.large'
    AllowedValues: 
      - 'dc2.large'
      - 'dc2.8xlarge'
      - 'ra3.xlplus'
      - 'ra3.4xlarge'
      - 'ra3.16xlarge'

  RedshiftMasterUsername:
    Type: String
    Description: 'Master username for Redshift cluster'
    Default: 'oracleadmin'
    MinLength: 1
    MaxLength: 63
    AllowedPattern: '^[a-zA-Z][a-zA-Z0-9_]*$'
    ConstraintDescription: 'Must begin with a letter and contain only alphanumeric characters and underscores'

  RedshiftMasterPassword:
    Type: String
    Description: 'Master password for Redshift cluster (8-64 characters)'
    NoEcho: true
    MinLength: 8
    MaxLength: 64
    AllowedPattern: '^(?=.*[a-z])(?=.*[A-Z])(?=.*\d)[A-Za-z\d@$!%*?&]{8,64}$'
    ConstraintDescription: 'Password must be 8-64 characters with at least one uppercase, lowercase, and numeric character'

  RedshiftDatabaseName:
    Type: String
    Description: 'Initial database name for Redshift cluster'
    Default: 'oracleanalytics'
    MinLength: 1
    MaxLength: 64
    AllowedPattern: '^[a-z][a-z0-9_]*$'
    ConstraintDescription: 'Must begin with a lowercase letter and contain only lowercase letters, numbers, and underscores'

  EnableRedshiftEncryption:
    Type: String
    Description: 'Enable encryption at rest for Redshift cluster'
    Default: 'true'
    AllowedValues: ['true', 'false']

  # Monitoring Configuration
  CloudWatchLogRetentionDays:
    Type: Number
    Description: 'CloudWatch log retention period in days'
    Default: 30
    AllowedValues: [1, 3, 5, 7, 14, 30, 60, 90, 120, 150, 180, 365, 400, 545, 731, 1827, 3653]

  EnableCloudWatchDashboard:
    Type: String
    Description: 'Create CloudWatch dashboard for monitoring'
    Default: 'true'
    AllowedValues: ['true', 'false']

  NotificationEmail:
    Type: String
    Description: 'Email address for monitoring notifications (optional)'
    Default: ''
    AllowedPattern: '^$|^[a-zA-Z0-9._%+-]+@[a-zA-Z0-9.-]+\.[a-zA-Z]{2,}$'
    ConstraintDescription: 'Must be a valid email address or empty'

  # Security Configuration
  EnableS3Encryption:
    Type: String
    Description: 'Enable server-side encryption for S3 bucket'
    Default: 'true'
    AllowedValues: ['true', 'false']

  KMSKeyId:
    Type: String
    Description: 'KMS Key ID for encryption (leave empty for AWS managed keys)'
    Default: ''
    AllowedPattern: '^$|^[a-f0-9]{8}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{4}-[a-f0-9]{12}$|^arn:aws:kms:.*$|^alias/.*$'
    ConstraintDescription: 'Must be a valid KMS Key ID, ARN, or alias'

  RestrictS3AccessToODB:
    Type: String
    Description: 'Restrict S3 bucket access to Oracle Database@AWS only'
    Default: 'true'
    AllowedValues: ['true', 'false']

  # General Configuration
  Environment:
    Type: String
    Description: 'Environment name (dev, test, prod)'
    Default: 'dev'
    AllowedValues: ['dev', 'test', 'prod']

  ProjectName:
    Type: String
    Description: 'Project name for resource tagging'
    Default: 'oracle-aws-integration'
    MinLength: 1
    MaxLength: 50
    AllowedPattern: '^[a-zA-Z0-9-_]*$'
    ConstraintDescription: 'Must contain only alphanumeric characters, hyphens, and underscores'

  ResourceNamingSuffix:
    Type: String
    Description: 'Suffix for resource naming (auto-generated if empty)'
    Default: ''
    AllowedPattern: '^$|^[a-z0-9]{6}$'
    ConstraintDescription: 'Must be exactly 6 lowercase alphanumeric characters or empty'

# Conditions
Conditions:
  # Storage Conditions
  AutoGenerateS3BucketName: !Equals [!Ref S3BucketName, '']
  EnableS3VersioningCondition: !Equals [!Ref EnableS3Versioning, 'true']
  EnableS3EncryptionCondition: !Equals [!Ref EnableS3Encryption, 'true']
  UseCustomKMSKey: !And 
    - !Equals [!Ref EnableS3Encryption, 'true']
    - !Not [!Equals [!Ref KMSKeyId, '']]
  
  # Analytics Conditions
  IsMultiNodeRedshift: !Equals [!Ref RedshiftClusterType, 'multi-node']
  EnableRedshiftEncryptionCondition: !Equals [!Ref EnableRedshiftEncryption, 'true']
  
  # Monitoring Conditions
  CreateDashboard: !Equals [!Ref EnableCloudWatchDashboard, 'true']
  CreateNotifications: !Not [!Equals [!Ref NotificationEmail, '']]
  
  # Security Conditions
  RestrictS3Access: !Equals [!Ref RestrictS3AccessToODB, 'true']
  
  # General Conditions
  AutoGenerateSuffix: !Equals [!Ref ResourceNamingSuffix, '']
  IsProduction: !Equals [!Ref Environment, 'prod']

# Resources
Resources:

  # ==========================================
  # Random Suffix Generation (Custom Resource)
  # ==========================================
  
  RandomSuffixGenerator:
    Type: AWS::CloudFormation::CustomResource
    Condition: AutoGenerateSuffix
    Properties:
      ServiceToken: !GetAtt RandomSuffixLambda.Arn
      Length: 6

  RandomSuffixLambda:
    Type: AWS::Lambda::Function
    Condition: AutoGenerateSuffix
    Properties:
      FunctionName: !Sub '${ProjectName}-random-suffix-${AWS::StackName}'
      Runtime: python3.11
      Handler: index.handler
      Role: !GetAtt RandomSuffixLambdaRole.Arn
      Timeout: 30
      Code:
        ZipFile: |
          import json
          import random
          import string
          import cfnresponse
          
          def handler(event, context):
              try:
                  if event['RequestType'] == 'Delete':
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                      return
                  
                  length = int(event['ResourceProperties'].get('Length', 6))
                  suffix = ''.join(random.choices(string.ascii_lowercase + string.digits, k=length))
                  
                  response_data = {'Suffix': suffix}
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
              except Exception as e:
                  print(f"Error: {str(e)}")
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})

  RandomSuffixLambdaRole:
    Type: AWS::IAM::Role
    Condition: AutoGenerateSuffix
    Properties:
      RoleName: !Sub '${ProjectName}-random-suffix-role-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole

  # ==========================================
  # S3 Storage Resources
  # ==========================================

  # S3 Bucket for Oracle Database Backups
  OracleBackupBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !If 
        - AutoGenerateS3BucketName
        - !Sub 
          - '${ProjectName}-oracle-backup-${Suffix}'
          - Suffix: !If 
            - AutoGenerateSuffix
            - !GetAtt RandomSuffixGenerator.Suffix
            - !Ref ResourceNamingSuffix
        - !Ref S3BucketName
      BucketEncryption: !If
        - EnableS3EncryptionCondition
        - ServerSideEncryptionConfiguration:
            - ServerSideEncryptionByDefault:
                SSEAlgorithm: !If [UseCustomKMSKey, 'aws:kms', 'AES256']
                KMSMasterKeyID: !If [UseCustomKMSKey, !Ref KMSKeyId, !Ref 'AWS::NoValue']
              BucketKeyEnabled: !If [UseCustomKMSKey, true, !Ref 'AWS::NoValue']
        - !Ref 'AWS::NoValue'
      VersioningConfiguration: !If
        - EnableS3VersioningCondition
        - Status: Enabled
        - !Ref 'AWS::NoValue'
      LifecycleConfiguration:
        Rules:
          - Id: OracleBackupLifecycle
            Status: Enabled
            Transitions:
              - TransitionInDays: !Ref S3LifecycleTransitionDays
                StorageClass: STANDARD_IA
              - TransitionInDays: !If [IsProduction, 90, 60]
                StorageClass: GLACIER
              - TransitionInDays: !If [IsProduction, 365, 180]
                StorageClass: DEEP_ARCHIVE
            ExpirationInDays: !Ref OracleBackupRetentionDays
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      NotificationConfiguration: !If
        - CreateNotifications
        - TopicConfigurations:
            - Event: 's3:ObjectCreated:*'
              Topic: !Ref BackupNotificationTopic
              Filter:
                S3Key:
                  Rules:
                    - Name: prefix
                      Value: 'oracle-backups/'
        - !Ref 'AWS::NoValue'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-oracle-backup-bucket'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: 'Oracle Database Backups'
        - Key: ManagedBy
          Value: 'CloudFormation'

  # S3 Bucket Policy for Oracle Database@AWS Access
  OracleBackupBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Condition: RestrictS3Access
    Properties:
      Bucket: !Ref OracleBackupBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Sid: AllowOracleDBAccess
            Effect: Allow
            Principal:
              Service: odb.amazonaws.com
            Action:
              - 's3:GetObject'
              - 's3:PutObject'
              - 's3:DeleteObject'
              - 's3:ListBucket'
            Resource:
              - !Sub '${OracleBackupBucket}/*'
              - !GetAtt OracleBackupBucket.Arn
            Condition:
              StringEquals:
                'aws:SourceAccount': !Ref 'AWS::AccountId'
          - Sid: DenyDirectPublicAccess
            Effect: Deny
            Principal: '*'
            Action: 's3:*'
            Resource:
              - !Sub '${OracleBackupBucket}/*'
              - !GetAtt OracleBackupBucket.Arn
            Condition:
              Bool:
                'aws:SecureTransport': 'false'

  # ==========================================
  # Analytics Resources (Amazon Redshift)
  # ==========================================

  # IAM Role for Redshift Cluster
  RedshiftServiceRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub 
        - '${ProjectName}-redshift-role-${Suffix}'
        - Suffix: !If 
          - AutoGenerateSuffix
          - !GetAtt RandomSuffixGenerator.Suffix
          - !Ref ResourceNamingSuffix
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: redshift.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess
        - arn:aws:iam::aws:policy/AmazonRedshiftAllCommandsFullAccess
      Policies:
        - PolicyName: OracleS3BackupAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 's3:GetObject'
                  - 's3:ListBucket'
                Resource:
                  - !GetAtt OracleBackupBucket.Arn
                  - !Sub '${OracleBackupBucket}/*'
              - Effect: Allow
                Action:
                  - 'logs:CreateLogGroup'
                  - 'logs:CreateLogStream'
                  - 'logs:PutLogEvents'
                Resource: !Sub 'arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/redshift/*'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-service-role'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Redshift Subnet Group
  RedshiftSubnetGroup:
    Type: AWS::Redshift::SubnetGroup
    Properties:
      SubnetGroupName: !Sub 
        - '${ProjectName}-redshift-subnet-group-${Suffix}'
        - Suffix: !If 
          - AutoGenerateSuffix
          - !GetAtt RandomSuffixGenerator.Suffix
          - !Ref ResourceNamingSuffix
      Description: 'Subnet group for Oracle analytics Redshift cluster'
      SubnetIds:
        - !Ref RedshiftSubnet1
        - !Ref RedshiftSubnet2
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-subnet-group'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # VPC for Redshift (simplified for demo)
  RedshiftVPC:
    Type: AWS::EC2::VPC
    Properties:
      CidrBlock: '10.0.0.0/16'
      EnableDnsHostnames: true
      EnableDnsSupport: true
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-vpc'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Subnets for Redshift
  RedshiftSubnet1:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RedshiftVPC
      CidrBlock: '10.0.1.0/24'
      AvailabilityZone: !Select [0, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-subnet-1'
        - Key: Environment
          Value: !Ref Environment

  RedshiftSubnet2:
    Type: AWS::EC2::Subnet
    Properties:
      VpcId: !Ref RedshiftVPC
      CidrBlock: '10.0.2.0/24'
      AvailabilityZone: !Select [1, !GetAZs '']
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-subnet-2'
        - Key: Environment
          Value: !Ref Environment

  # Security Group for Redshift
  RedshiftSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-redshift-sg'
      GroupDescription: 'Security group for Oracle analytics Redshift cluster'
      VpcId: !Ref RedshiftVPC
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 5439
          ToPort: 5439
          SourceSecurityGroupId: !Ref RedshiftClientSecurityGroup
          Description: 'Redshift access from client security group'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-security-group'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # Client Security Group for Redshift Access
  RedshiftClientSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupName: !Sub '${ProjectName}-redshift-client-sg'
      GroupDescription: 'Security group for Redshift client access'
      VpcId: !Ref RedshiftVPC
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-client-security-group'
        - Key: Environment
          Value: !Ref Environment

  # Redshift Parameter Group
  RedshiftParameterGroup:
    Type: AWS::Redshift::ParameterGroup
    Properties:
      ParameterGroupName: !Sub 
        - '${ProjectName}-redshift-params-${Suffix}'
        - Suffix: !If 
          - AutoGenerateSuffix
          - !GetAtt RandomSuffixGenerator.Suffix
          - !Ref ResourceNamingSuffix
      Description: 'Parameter group for Oracle analytics Redshift cluster'
      ParameterGroupFamily: 'redshift-1.0'
      Parameters:
        - ParameterName: 'enable_user_activity_logging'
          ParameterValue: 'true'
        - ParameterName: 'max_cursor_result_set_size'
          ParameterValue: '0'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-redshift-parameter-group'
        - Key: Environment
          Value: !Ref Environment

  # Redshift Cluster
  RedshiftCluster:
    Type: AWS::Redshift::Cluster
    Properties:
      ClusterIdentifier: !Sub 
        - '${ProjectName}-oracle-analytics-${Suffix}'
        - Suffix: !If 
          - AutoGenerateSuffix
          - !GetAtt RandomSuffixGenerator.Suffix
          - !Ref ResourceNamingSuffix
      ClusterType: !Ref RedshiftClusterType
      NodeType: !Ref RedshiftNodeType
      NumberOfNodes: !If [IsMultiNodeRedshift, 2, !Ref 'AWS::NoValue']
      MasterUsername: !Ref RedshiftMasterUsername
      MasterUserPassword: !Ref RedshiftMasterPassword
      DBName: !Ref RedshiftDatabaseName
      Port: 5439
      IamRoles:
        - !GetAtt RedshiftServiceRole.Arn
      VpcSecurityGroupIds:
        - !Ref RedshiftSecurityGroup
      ClusterSubnetGroupName: !Ref RedshiftSubnetGroup
      ClusterParameterGroupName: !Ref RedshiftParameterGroup
      Encrypted: !Ref EnableRedshiftEncryptionCondition
      KmsKeyId: !If [UseCustomKMSKey, !Ref KMSKeyId, !Ref 'AWS::NoValue']
      AutomatedSnapshotRetentionPeriod: !If [IsProduction, 7, 1]
      PreferredMaintenanceWindow: 'sun:05:00-sun:06:00'
      PubliclyAccessible: false
      LoggingProperties:
        BucketName: !Ref OracleBackupBucket
        S3KeyPrefix: 'redshift-logs/'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-oracle-analytics-cluster'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName
        - Key: Purpose
          Value: 'Oracle Zero-ETL Analytics'

  # ==========================================
  # Monitoring Resources
  # ==========================================

  # CloudWatch Log Group for Oracle Operations
  OracleCloudWatchLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      LogGroupName: !Sub '/aws/oracle-database/${OdbNetworkId}'
      RetentionInDays: !Ref CloudWatchLogRetentionDays
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-oracle-logs'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # SNS Topic for Backup Notifications
  BackupNotificationTopic:
    Type: AWS::SNS::Topic
    Condition: CreateNotifications
    Properties:
      TopicName: !Sub '${ProjectName}-oracle-backup-notifications'
      DisplayName: 'Oracle Database Backup Notifications'
      Tags:
        - Key: Name
          Value: !Sub '${ProjectName}-backup-notifications'
        - Key: Environment
          Value: !Ref Environment
        - Key: Project
          Value: !Ref ProjectName

  # SNS Subscription for Email Notifications
  BackupNotificationSubscription:
    Type: AWS::SNS::Subscription
    Condition: CreateNotifications
    Properties:
      TopicArn: !Ref BackupNotificationTopic
      Protocol: email
      Endpoint: !Ref NotificationEmail

  # CloudWatch Dashboard
  OracleIntegrationDashboard:
    Type: AWS::CloudWatch::Dashboard
    Condition: CreateDashboard
    Properties:
      DashboardName: !Sub '${ProjectName}-oracle-integration-dashboard'
      DashboardBody: !Sub |
        {
          "widgets": [
            {
              "type": "metric",
              "x": 0,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/S3", "BucketRequests", "BucketName", "${OracleBackupBucket}", "FilterId", "EntireBucket"],
                  [".", "NumberOfObjects", ".", ".", "StorageType", "AllStorageTypes"]
                ],
                "period": 300,
                "stat": "Sum",
                "region": "${AWS::Region}",
                "title": "S3 Backup Activity"
              }
            },
            {
              "type": "metric",
              "x": 12,
              "y": 0,
              "width": 12,
              "height": 6,
              "properties": {
                "metrics": [
                  ["AWS/Redshift", "CPUUtilization", "ClusterIdentifier", "${RedshiftCluster}"],
                  [".", "DatabaseConnections", ".", "."],
                  [".", "NetworkReceiveThroughput", ".", "."],
                  [".", "NetworkTransmitThroughput", ".", "."]
                ],
                "period": 300,
                "stat": "Average",
                "region": "${AWS::Region}",
                "title": "Redshift Cluster Performance"
              }
            },
            {
              "type": "log",
              "x": 0,
              "y": 6,
              "width": 24,
              "height": 6,
              "properties": {
                "query": "SOURCE '/aws/oracle-database/${OdbNetworkId}'\n| fields @timestamp, @message\n| sort @timestamp desc\n| limit 100",
                "region": "${AWS::Region}",
                "title": "Oracle Database Logs",
                "view": "table"
              }
            }
          ]
        }

  # CloudWatch Alarms
  S3BackupFailureAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateNotifications
    Properties:
      AlarmName: !Sub '${ProjectName}-s3-backup-failures'
      AlarmDescription: 'Monitor S3 backup failures for Oracle Database'
      MetricName: '4xxErrors'
      Namespace: 'AWS/S3'
      Statistic: Sum
      Period: 300
      EvaluationPeriods: 2
      Threshold: 5
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: BucketName
          Value: !Ref OracleBackupBucket
      AlarmActions:
        - !Ref BackupNotificationTopic
      TreatMissingData: notBreaching

  RedshiftCPUAlarm:
    Type: AWS::CloudWatch::Alarm
    Condition: CreateNotifications
    Properties:
      AlarmName: !Sub '${ProjectName}-redshift-high-cpu'
      AlarmDescription: 'Monitor high CPU utilization on Redshift cluster'
      MetricName: 'CPUUtilization'
      Namespace: 'AWS/Redshift'
      Statistic: Average
      Period: 300
      EvaluationPeriods: 3
      Threshold: 85
      ComparisonOperator: GreaterThanThreshold
      Dimensions:
        - Name: ClusterIdentifier
          Value: !Ref RedshiftCluster
      AlarmActions:
        - !Ref BackupNotificationTopic
      TreatMissingData: notBreaching

  # ==========================================
  # VPC Lattice Integration (Custom Resource)
  # ==========================================

  # Custom Resource for ODB Network Configuration
  ODBNetworkConfiguration:
    Type: AWS::CloudFormation::CustomResource
    Properties:
      ServiceToken: !GetAtt ODBConfigurationLambda.Arn
      OdbNetworkId: !Ref OdbNetworkId
      S3BucketArn: !GetAtt OracleBackupBucket.Arn
      EnableS3Access: 'true'
      EnableZeroETL: 'true'
      RedshiftClusterIdentifier: !Ref RedshiftCluster

  ODBConfigurationLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: !Sub '${ProjectName}-odb-config-${AWS::StackName}'
      Runtime: python3.11
      Handler: index.handler
      Role: !GetAtt ODBConfigurationLambdaRole.Arn
      Timeout: 300
      Code:
        ZipFile: |
          import json
          import boto3
          import cfnresponse
          import logging
          
          logger = logging.getLogger()
          logger.setLevel(logging.INFO)
          
          def handler(event, context):
              try:
                  logger.info(f"Event: {json.dumps(event)}")
                  
                  if event['RequestType'] == 'Delete':
                      # Cleanup ODB network configurations
                      # Note: In a real implementation, you would disable S3 and Zero-ETL access
                      logger.info("Cleanup completed")
                      cfnresponse.send(event, context, cfnresponse.SUCCESS, {})
                      return
                  
                  props = event['ResourceProperties']
                  odb_network_id = props['OdbNetworkId']
                  s3_bucket_arn = props['S3BucketArn']
                  
                  # Note: This is a placeholder for actual ODB API calls
                  # In practice, you would use the appropriate AWS APIs to:
                  # 1. Enable S3 access for the ODB network
                  # 2. Configure S3 bucket policy
                  # 3. Enable Zero-ETL access
                  # 4. Configure VPC Lattice service network
                  
                  logger.info(f"Configuring ODB network {odb_network_id}")
                  logger.info(f"S3 bucket ARN: {s3_bucket_arn}")
                  
                  response_data = {
                      'OdbNetworkId': odb_network_id,
                      'S3AccessEnabled': 'true',
                      'ZeroETLEnabled': 'true',
                      'ServiceNetworkId': f'sn-{odb_network_id[-8:]}'
                  }
                  
                  cfnresponse.send(event, context, cfnresponse.SUCCESS, response_data)
                  
              except Exception as e:
                  logger.error(f"Error: {str(e)}")
                  cfnresponse.send(event, context, cfnresponse.FAILED, {})

  ODBConfigurationLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${ProjectName}-odb-config-role-${AWS::StackName}'
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
      Policies:
        - PolicyName: ODBNetworkManagement
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - 'odb:UpdateOdbNetwork'
                  - 'odb:GetOdbNetwork'
                  - 'odb:ListOdbNetworks'
                  - 'vpc-lattice:*'
                  - 's3:GetBucketPolicy'
                  - 's3:PutBucketPolicy'
                Resource: '*'

# Outputs
Outputs:
  # Storage Outputs
  S3BucketName:
    Description: 'Name of the S3 bucket for Oracle database backups'
    Value: !Ref OracleBackupBucket
    Export:
      Name: !Sub '${AWS::StackName}-S3BucketName'

  S3BucketArn:
    Description: 'ARN of the S3 bucket for Oracle database backups'
    Value: !GetAtt OracleBackupBucket.Arn
    Export:
      Name: !Sub '${AWS::StackName}-S3BucketArn'

  # Analytics Outputs
  RedshiftClusterIdentifier:
    Description: 'Identifier of the Redshift cluster'
    Value: !Ref RedshiftCluster
    Export:
      Name: !Sub '${AWS::StackName}-RedshiftClusterIdentifier'

  RedshiftClusterEndpoint:
    Description: 'Endpoint address of the Redshift cluster'
    Value: !GetAtt RedshiftCluster.Endpoint.Address
    Export:
      Name: !Sub '${AWS::StackName}-RedshiftClusterEndpoint'

  RedshiftJDBCUrl:
    Description: 'JDBC connection URL for the Redshift cluster'
    Value: !Sub 'jdbc:redshift://${RedshiftCluster.Endpoint.Address}:${RedshiftCluster.Endpoint.Port}/${RedshiftDatabaseName}'
    Export:
      Name: !Sub '${AWS::StackName}-RedshiftJDBCUrl'

  RedshiftServiceRoleArn:
    Description: 'ARN of the IAM role for Redshift cluster'
    Value: !GetAtt RedshiftServiceRole.Arn
    Export:
      Name: !Sub '${AWS::StackName}-RedshiftServiceRoleArn'

  # Monitoring Outputs
  CloudWatchLogGroupName:
    Description: 'Name of the CloudWatch log group for Oracle operations'
    Value: !Ref OracleCloudWatchLogGroup
    Export:
      Name: !Sub '${AWS::StackName}-CloudWatchLogGroupName'

  CloudWatchDashboardUrl:
    Condition: CreateDashboard
    Description: 'URL to access the CloudWatch dashboard'
    Value: !Sub 'https://${AWS::Region}.console.aws.amazon.com/cloudwatch/home?region=${AWS::Region}#dashboards:name=${ProjectName}-oracle-integration-dashboard'
    Export:
      Name: !Sub '${AWS::StackName}-DashboardUrl'

  SNSTopicArn:
    Condition: CreateNotifications
    Description: 'ARN of the SNS topic for backup notifications'
    Value: !Ref BackupNotificationTopic
    Export:
      Name: !Sub '${AWS::StackName}-SNSTopicArn'

  # Network Outputs
  OdbNetworkId:
    Description: 'Oracle Database@AWS Network ID used in this deployment'
    Value: !Ref OdbNetworkId
    Export:
      Name: !Sub '${AWS::StackName}-OdbNetworkId'

  ServiceNetworkId:
    Description: 'VPC Lattice Service Network ID (from custom resource)'
    Value: !GetAtt ODBNetworkConfiguration.ServiceNetworkId
    Export:
      Name: !Sub '${AWS::StackName}-ServiceNetworkId'

  # Security Outputs
  RedshiftSecurityGroupId:
    Description: 'Security Group ID for the Redshift cluster'
    Value: !Ref RedshiftSecurityGroup
    Export:
      Name: !Sub '${AWS::StackName}-RedshiftSecurityGroupId'

  # Configuration Outputs
  DeploymentSuffix:
    Description: 'Suffix used for resource naming in this deployment'
    Value: !If 
      - AutoGenerateSuffix
      - !GetAtt RandomSuffixGenerator.Suffix
      - !Ref ResourceNamingSuffix
    Export:
      Name: !Sub '${AWS::StackName}-DeploymentSuffix'

  StackRegion:
    Description: 'AWS Region where this stack was deployed'
    Value: !Ref 'AWS::Region'
    Export:
      Name: !Sub '${AWS::StackName}-Region'

  # Quick Start Commands
  RedshiftConnectionCommand:
    Description: 'Command to connect to Redshift cluster using psql'
    Value: !Sub 'psql -h ${RedshiftCluster.Endpoint.Address} -p ${RedshiftCluster.Endpoint.Port} -d ${RedshiftDatabaseName} -U ${RedshiftMasterUsername}'
    Export:
      Name: !Sub '${AWS::StackName}-RedshiftConnectionCommand'

  S3BackupPath:
    Description: 'S3 path for Oracle database backups'
    Value: !Sub 's3://${OracleBackupBucket}/oracle-backups/'
    Export:
      Name: !Sub '${AWS::StackName}-S3BackupPath'