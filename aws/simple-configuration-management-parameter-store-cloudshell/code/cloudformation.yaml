AWSTemplateFormatVersion: '2010-09-09'
Description: >
  Simple Configuration Management with Parameter Store and CloudShell.
  This template creates a comprehensive Parameter Store configuration management
  system demonstrating standard, secure, and list parameter types with 
  hierarchical organization for application configuration data.

Metadata:
  Author: AWS Recipes
  Version: 1.0
  LastUpdated: 2025-07-12
  RecipeId: a7b4c5e2
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Application Configuration"
        Parameters:
          - ApplicationName
          - Environment
          - ParameterPrefix
      - Label:
          default: "Database Configuration"
        Parameters:
          - DatabaseUrl
          - DatabasePassword
      - Label:
          default: "API Configuration"
        Parameters:
          - ThirdPartyApiKey
          - AllowedOrigins
      - Label:
          default: "Feature Flags"
        Parameters:
          - DebugModeEnabled
          - SupportedRegions
      - Label:
          default: "Security Configuration"
        Parameters:
          - KmsKeyId
          - EnableParameterEncryption
    ParameterLabels:
      ApplicationName:
        default: "Application Name"
      Environment:
        default: "Environment (dev/staging/prod)"
      ParameterPrefix:
        default: "Parameter Store Path Prefix"
      DatabaseUrl:
        default: "Database Connection URL"
      DatabasePassword:
        default: "Database Password"
      ThirdPartyApiKey:
        default: "Third-party API Key"
      AllowedOrigins:
        default: "CORS Allowed Origins"
      DebugModeEnabled:
        default: "Enable Debug Mode"
      SupportedRegions:
        default: "Supported AWS Regions"
      KmsKeyId:
        default: "KMS Key for Encryption"
      EnableParameterEncryption:
        default: "Enable Parameter Encryption"

Parameters:
  ApplicationName:
    Type: String
    Default: myapp
    Description: Name of the application for parameter organization
    MinLength: 3
    MaxLength: 50
    AllowedPattern: ^[a-zA-Z0-9-]+$
    ConstraintDescription: Must contain only alphanumeric characters and hyphens

  Environment:
    Type: String
    Default: development
    Description: Environment name for parameter organization
    AllowedValues:
      - development
      - staging
      - production
      - test
    ConstraintDescription: Must be one of development, staging, production, or test

  ParameterPrefix:
    Type: String
    Description: Custom prefix for parameter organization (leave empty to use /{ApplicationName})
    Default: ""
    MaxLength: 100
    AllowedPattern: ^$|^\/[a-zA-Z0-9\/_-]+$
    ConstraintDescription: Must start with / and contain only alphanumeric characters, hyphens, underscores, and forward slashes

  DatabaseUrl:
    Type: String
    Default: postgresql://db.example.com:5432/myapp
    Description: Database connection URL (stored as standard parameter)
    MinLength: 10
    MaxLength: 255
    ConstraintDescription: Must be a valid database connection URL

  DatabasePassword:
    Type: String
    NoEcho: true
    Description: Database password (stored as encrypted SecureString parameter)
    MinLength: 8
    MaxLength: 128
    ConstraintDescription: Must be between 8 and 128 characters

  ThirdPartyApiKey:
    Type: String
    NoEcho: true
    Description: Third-party API key (stored as encrypted SecureString parameter)
    MinLength: 10
    MaxLength: 255
    ConstraintDescription: Must be between 10 and 255 characters

  AllowedOrigins:
    Type: CommaDelimitedList
    Default: "https://app.example.com,https://admin.example.com,https://mobile.example.com"
    Description: CORS allowed origins (stored as StringList parameter)
    ConstraintDescription: Must be a comma-delimited list of valid URLs

  DebugModeEnabled:
    Type: String
    Default: "true"
    Description: Debug mode feature flag
    AllowedValues:
      - "true"
      - "false"
    ConstraintDescription: Must be either true or false

  SupportedRegions:
    Type: CommaDelimitedList
    Default: "us-east-1,us-west-2,eu-west-1"
    Description: List of supported AWS regions for deployment
    ConstraintDescription: Must be a comma-delimited list of valid AWS region names

  KmsKeyId:
    Type: String
    Default: alias/aws/ssm
    Description: KMS Key ID or alias for parameter encryption
    AllowedPattern: ^(alias\/[a-zA-Z0-9\/_-]+|arn:aws:kms:[a-z0-9-]+:[0-9]{12}:key\/[a-f0-9-]{36}|[a-f0-9-]{36})$
    ConstraintDescription: Must be a valid KMS key ID, ARN, or alias

  EnableParameterEncryption:
    Type: String
    Default: "true"
    Description: Enable KMS encryption for SecureString parameters
    AllowedValues:
      - "true"
      - "false"
    ConstraintDescription: Must be either true or false

Conditions:
  # Condition to use custom parameter prefix if provided, otherwise use default
  UseCustomPrefix: !Not [!Equals [!Ref ParameterPrefix, ""]]
  
  # Condition to enable parameter encryption
  EncryptionEnabled: !Equals [!Ref EnableParameterEncryption, "true"]
  
  # Condition for production environment specific resources
  IsProduction: !Equals [!Ref Environment, "production"]

Resources:
  # Database Configuration Parameters
  DatabaseUrlParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 
        - "${Prefix}/database/url"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: !Ref DatabaseUrl
      Type: String
      Description: !Sub "Database connection URL for ${ApplicationName} in ${Environment}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: database
        ParameterType: standard
        CreatedBy: CloudFormation

  DatabasePasswordParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 
        - "${Prefix}/database/password"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: !Ref DatabasePassword
      Type: !If [EncryptionEnabled, SecureString, String]
      KeyId: !If [EncryptionEnabled, !Ref KmsKeyId, !Ref "AWS::NoValue"]
      Description: !Sub "Database password for ${ApplicationName} in ${Environment}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: database
        ParameterType: secure
        CreatedBy: CloudFormation

  # Environment Configuration Parameter
  EnvironmentParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 
        - "${Prefix}/config/environment"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: !Ref Environment
      Type: String
      Description: !Sub "Application environment setting for ${ApplicationName}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: configuration
        ParameterType: standard
        CreatedBy: CloudFormation

  # Feature Flag Parameter
  DebugModeParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 
        - "${Prefix}/features/debug-mode"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: !Ref DebugModeEnabled
      Type: String
      Description: !Sub "Debug mode feature flag for ${ApplicationName}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: features
        ParameterType: standard
        CreatedBy: CloudFormation

  # API Configuration Parameters
  ThirdPartyApiKeyParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 
        - "${Prefix}/api/third-party-key"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: !Ref ThirdPartyApiKey
      Type: !If [EncryptionEnabled, SecureString, String]
      KeyId: !If [EncryptionEnabled, !Ref KmsKeyId, !Ref "AWS::NoValue"]
      Description: !Sub "Third-party API key for ${ApplicationName} in ${Environment}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: api
        ParameterType: secure
        CreatedBy: CloudFormation

  AllowedOriginsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 
        - "${Prefix}/api/allowed-origins"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: !Join [",", !Ref AllowedOrigins]
      Type: StringList
      Description: !Sub "CORS allowed origins for ${ApplicationName}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: api
        ParameterType: list
        CreatedBy: CloudFormation

  # Deployment Configuration Parameter
  SupportedRegionsParameter:
    Type: AWS::SSM::Parameter
    Properties:
      Name: !Sub 
        - "${Prefix}/deployment/regions"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: !Join [",", !Ref SupportedRegions]
      Type: StringList
      Description: !Sub "Supported deployment regions for ${ApplicationName}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: deployment
        ParameterType: list
        CreatedBy: CloudFormation

  # Production-specific Parameter (conditional)
  ProductionOnlyParameter:
    Type: AWS::SSM::Parameter
    Condition: IsProduction
    Properties:
      Name: !Sub 
        - "${Prefix}/config/production-flag"
        - Prefix: !If 
          - UseCustomPrefix
          - !Ref ParameterPrefix
          - !Sub "/${ApplicationName}"
      Value: "true"
      Type: String
      Description: !Sub "Production environment flag for ${ApplicationName}"
      Tags:
        Application: !Ref ApplicationName
        Environment: !Ref Environment
        Category: configuration
        ParameterType: standard
        CreatedBy: CloudFormation

  # IAM Role for Parameter Store Access (optional - for applications)
  ParameterStoreAccessRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub "${ApplicationName}-parameter-store-role-${Environment}"
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - ec2.amazonaws.com
                - lambda.amazonaws.com
                - ecs-tasks.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: ParameterStoreReadAccess
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - ssm:GetParameter
                  - ssm:GetParameters
                  - ssm:GetParametersByPath
                  - ssm:DescribeParameters
                Resource: 
                  - !Sub 
                    - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${Prefix}/*"
                    - Prefix: !If 
                      - UseCustomPrefix
                      - !Ref ParameterPrefix
                      - !Sub "/${ApplicationName}"
              - !If
                - EncryptionEnabled
                - Effect: Allow
                  Action:
                    - kms:Decrypt
                  Resource: 
                    - !Sub "arn:aws:kms:${AWS::Region}:${AWS::AccountId}:key/*"
                  Condition:
                    StringEquals:
                      "kms:ViaService": !Sub "ssm.${AWS::Region}.amazonaws.com"
                - !Ref "AWS::NoValue"
      Tags:
        - Key: Application
          Value: !Ref ApplicationName
        - Key: Environment
          Value: !Ref Environment
        - Key: Purpose
          Value: ParameterStoreAccess
        - Key: CreatedBy
          Value: CloudFormation

  # Instance Profile for EC2 instances (if needed)
  ParameterStoreInstanceProfile:
    Type: AWS::IAM::InstanceProfile
    Properties:
      InstanceProfileName: !Sub "${ApplicationName}-parameter-store-profile-${Environment}"
      Roles:
        - !Ref ParameterStoreAccessRole

Outputs:
  # Application Configuration Outputs
  ApplicationName:
    Description: Name of the application
    Value: !Ref ApplicationName
    Export:
      Name: !Sub "${AWS::StackName}-ApplicationName"

  Environment:
    Description: Environment name
    Value: !Ref Environment
    Export:
      Name: !Sub "${AWS::StackName}-Environment"

  ParameterPrefix:
    Description: Parameter Store prefix for all application parameters
    Value: !If 
      - UseCustomPrefix
      - !Ref ParameterPrefix
      - !Sub "/${ApplicationName}"
    Export:
      Name: !Sub "${AWS::StackName}-ParameterPrefix"

  # Parameter ARNs for reference
  DatabaseUrlParameterArn:
    Description: ARN of the database URL parameter
    Value: !Sub 
      - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${Prefix}/database/url"
      - Prefix: !If 
        - UseCustomPrefix
        - !Ref ParameterPrefix
        - !Sub "/${ApplicationName}"
    Export:
      Name: !Sub "${AWS::StackName}-DatabaseUrlParameterArn"

  DatabasePasswordParameterArn:
    Description: ARN of the database password parameter
    Value: !Sub 
      - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${Prefix}/database/password"
      - Prefix: !If 
        - UseCustomPrefix
        - !Ref ParameterPrefix
        - !Sub "/${ApplicationName}"
    Export:
      Name: !Sub "${AWS::StackName}-DatabasePasswordParameterArn"

  ThirdPartyApiKeyParameterArn:
    Description: ARN of the third-party API key parameter
    Value: !Sub 
      - "arn:aws:ssm:${AWS::Region}:${AWS::AccountId}:parameter${Prefix}/api/third-party-key"
      - Prefix: !If 
        - UseCustomPrefix
        - !Ref ParameterPrefix
        - !Sub "/${ApplicationName}"
    Export:
      Name: !Sub "${AWS::StackName}-ThirdPartyApiKeyParameterArn"

  # IAM Role Outputs
  ParameterStoreAccessRoleArn:
    Description: ARN of the IAM role for Parameter Store access
    Value: !GetAtt ParameterStoreAccessRole.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ParameterStoreAccessRoleArn"

  ParameterStoreInstanceProfileArn:
    Description: ARN of the instance profile for Parameter Store access
    Value: !GetAtt ParameterStoreInstanceProfile.Arn
    Export:
      Name: !Sub "${AWS::StackName}-ParameterStoreInstanceProfileArn"

  # CLI Commands for Parameter Retrieval
  GetAllParametersCommand:
    Description: AWS CLI command to retrieve all application parameters
    Value: !Sub 
      - "aws ssm get-parameters-by-path --path '${Prefix}' --recursive --with-decryption"
      - Prefix: !If 
        - UseCustomPrefix
        - !Ref ParameterPrefix
        - !Sub "/${ApplicationName}"

  GetDatabaseUrlCommand:
    Description: AWS CLI command to retrieve database URL parameter
    Value: !Sub 
      - "aws ssm get-parameter --name '${Prefix}/database/url' --query 'Parameter.Value' --output text"
      - Prefix: !If 
        - UseCustomPrefix
        - !Ref ParameterPrefix
        - !Sub "/${ApplicationName}"

  GetApiKeyCommand:
    Description: AWS CLI command to retrieve encrypted API key parameter
    Value: !Sub 
      - "aws ssm get-parameter --name '${Prefix}/api/third-party-key' --with-decryption --query 'Parameter.Value' --output text"
      - Prefix: !If 
        - UseCustomPrefix
        - !Ref ParameterPrefix
        - !Sub "/${ApplicationName}"

  # Configuration Summary
  ParameterSummary:
    Description: Summary of created parameters and their types
    Value: !Sub 
      - |
        Parameters created under prefix '${Prefix}':
        - /database/url (String): Database connection URL
        - /database/password (${PasswordType}): Database password
        - /config/environment (String): Environment setting
        - /features/debug-mode (String): Debug mode flag
        - /api/third-party-key (${ApiKeyType}): Third-party API key
        - /api/allowed-origins (StringList): CORS allowed origins
        - /deployment/regions (StringList): Supported regions
        ${ProductionParam}
      - Prefix: !If 
        - UseCustomPrefix
        - !Ref ParameterPrefix
        - !Sub "/${ApplicationName}"
        PasswordType: !If [EncryptionEnabled, "SecureString", "String"]
        ApiKeyType: !If [EncryptionEnabled, "SecureString", "String"]
        ProductionParam: !If 
          - IsProduction
          - "- /config/production-flag (String): Production environment flag"
          - ""

  # Cost Estimation
  EstimatedMonthlyCost:
    Description: Estimated monthly cost for Parameter Store usage
    Value: !Sub 
      - |
        Standard parameters: ${StandardCount} x $0.05 = $${StandardCost}
        API calls: First 10,000 free monthly, then $0.05 per 10,000
        SecureString parameters: ${SecureCount} (included in standard pricing)
        Total estimated monthly cost: $${TotalCost}
      - StandardCount: !If [IsProduction, "8", "7"]
        StandardCost: !If [IsProduction, "0.40", "0.35"]
        SecureCount: !If [EncryptionEnabled, "2", "0"]
        TotalCost: !If [IsProduction, "0.40", "0.35"]

  # Security Information
  SecurityConfiguration:
    Description: Security configuration summary
    Value: !Sub 
      - |
        Encryption: ${EncryptionStatus}
        KMS Key: ${KmsKeyId}
        IAM Role: ${AWS::StackName}-ParameterStoreAccessRole
        Secure Parameters: ${SecureParameterList}
      - EncryptionStatus: !If [EncryptionEnabled, "Enabled", "Disabled"]
        SecureParameterList: !If 
          - EncryptionEnabled
          - "database/password, api/third-party-key"
          - "None (encryption disabled)"